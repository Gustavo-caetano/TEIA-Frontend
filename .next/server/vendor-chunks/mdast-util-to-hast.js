"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdast-util-to-hast";
exports.ids = ["vendor-chunks/mdast-util-to-hast"];
exports.modules = {

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/footer.js":
/*!*******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/footer.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   footer: () => (/* binding */ footer)\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"(ssr)/./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */ \n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */ function footer(state) {\n    /** @type {Array<ElementContent>} */ const listItems = [];\n    let index = -1;\n    while(++index < state.footnoteOrder.length){\n        const def = state.footnoteById[state.footnoteOrder[index]];\n        if (!def) {\n            continue;\n        }\n        const content = state.all(def);\n        const id = String(def.identifier).toUpperCase();\n        const safeId = (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(id.toLowerCase());\n        let referenceIndex = 0;\n        /** @type {Array<ElementContent>} */ const backReferences = [];\n        while(++referenceIndex <= state.footnoteCounts[id]){\n            /** @type {Element} */ const backReference = {\n                type: \"element\",\n                tagName: \"a\",\n                properties: {\n                    href: \"#\" + state.clobberPrefix + \"fnref-\" + safeId + (referenceIndex > 1 ? \"-\" + referenceIndex : \"\"),\n                    dataFootnoteBackref: true,\n                    className: [\n                        \"data-footnote-backref\"\n                    ],\n                    ariaLabel: state.footnoteBackLabel\n                },\n                children: [\n                    {\n                        type: \"text\",\n                        value: \"â†©\"\n                    }\n                ]\n            };\n            if (referenceIndex > 1) {\n                backReference.children.push({\n                    type: \"element\",\n                    tagName: \"sup\",\n                    children: [\n                        {\n                            type: \"text\",\n                            value: String(referenceIndex)\n                        }\n                    ]\n                });\n            }\n            if (backReferences.length > 0) {\n                backReferences.push({\n                    type: \"text\",\n                    value: \" \"\n                });\n            }\n            backReferences.push(backReference);\n        }\n        const tail = content[content.length - 1];\n        if (tail && tail.type === \"element\" && tail.tagName === \"p\") {\n            const tailTail = tail.children[tail.children.length - 1];\n            if (tailTail && tailTail.type === \"text\") {\n                tailTail.value += \" \";\n            } else {\n                tail.children.push({\n                    type: \"text\",\n                    value: \" \"\n                });\n            }\n            tail.children.push(...backReferences);\n        } else {\n            content.push(...backReferences);\n        }\n        /** @type {Element} */ const listItem = {\n            type: \"element\",\n            tagName: \"li\",\n            properties: {\n                id: state.clobberPrefix + \"fn-\" + safeId\n            },\n            children: state.wrap(content, true)\n        };\n        state.patch(def, listItem);\n        listItems.push(listItem);\n    }\n    if (listItems.length === 0) {\n        return;\n    }\n    return {\n        type: \"element\",\n        tagName: \"section\",\n        properties: {\n            dataFootnotes: true,\n            className: [\n                \"footnotes\"\n            ]\n        },\n        children: [\n            {\n                type: \"element\",\n                tagName: state.footnoteLabelTagName,\n                properties: {\n                    // To do: use structured clone.\n                    ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n                    id: \"footnote-label\"\n                },\n                children: [\n                    {\n                        type: \"text\",\n                        value: state.footnoteLabel\n                    }\n                ]\n            },\n            {\n                type: \"text\",\n                value: \"\\n\"\n            },\n            {\n                type: \"element\",\n                tagName: \"ol\",\n                properties: {},\n                children: state.wrap(listItems, true)\n            },\n            {\n                type: \"text\",\n                value: \"\\n\"\n            }\n        ]\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/footer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js":
/*!********************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockquote: () => (/* binding */ blockquote)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function blockquote(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"blockquote\",\n        properties: {},\n        children: state.wrap(state.all(node), true)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9ibG9ja3F1b3RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0EsV0FBV0MsS0FBSyxFQUFFQyxJQUFJO0lBQ3BDLG9CQUFvQixHQUNwQixNQUFNQyxTQUFTO1FBQ2JDLE1BQU07UUFDTkMsU0FBUztRQUNUQyxZQUFZLENBQUM7UUFDYkMsVUFBVU4sTUFBTU8sSUFBSSxDQUFDUCxNQUFNUSxHQUFHLENBQUNQLE9BQU87SUFDeEM7SUFDQUQsTUFBTVMsS0FBSyxDQUFDUixNQUFNQztJQUNsQixPQUFPRixNQUFNVSxTQUFTLENBQUNULE1BQU1DO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9ibG9ja3F1b3RlLmpzP2RhOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5CbG9ja3F1b3RlfSBCbG9ja3F1b3RlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbi8qKlxuICogVHVybiBhbiBtZGFzdCBgYmxvY2txdW90ZWAgbm9kZSBpbnRvIGhhc3QuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtCbG9ja3F1b3RlfSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cbiAqICAgaGFzdCBub2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYmxvY2txdW90ZShzdGF0ZSwgbm9kZSkge1xuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgdGFnTmFtZTogJ2Jsb2NrcXVvdGUnLFxuICAgIHByb3BlcnRpZXM6IHt9LFxuICAgIGNoaWxkcmVuOiBzdGF0ZS53cmFwKHN0YXRlLmFsbChub2RlKSwgdHJ1ZSlcbiAgfVxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxufVxuIl0sIm5hbWVzIjpbImJsb2NrcXVvdGUiLCJzdGF0ZSIsIm5vZGUiLCJyZXN1bHQiLCJ0eXBlIiwidGFnTmFtZSIsInByb3BlcnRpZXMiLCJjaGlsZHJlbiIsIndyYXAiLCJhbGwiLCJwYXRjaCIsImFwcGx5RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/break.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/break.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hardBreak: () => (/* binding */ hardBreak)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */ function hardBreak(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"br\",\n        properties: {},\n        children: []\n    };\n    state.patch(node, result);\n    return [\n        state.applyData(node, result),\n        {\n            type: \"text\",\n            value: \"\\n\"\n        }\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9icmVhay5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0NBS0MsR0FFRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQSxVQUFVQyxLQUFLLEVBQUVDLElBQUk7SUFDbkMsb0JBQW9CLEdBQ3BCLE1BQU1DLFNBQVM7UUFBQ0MsTUFBTTtRQUFXQyxTQUFTO1FBQU1DLFlBQVksQ0FBQztRQUFHQyxVQUFVLEVBQUU7SUFBQTtJQUM1RU4sTUFBTU8sS0FBSyxDQUFDTixNQUFNQztJQUNsQixPQUFPO1FBQUNGLE1BQU1RLFNBQVMsQ0FBQ1AsTUFBTUM7UUFBUztZQUFDQyxNQUFNO1lBQVFNLE9BQU87UUFBSTtLQUFFO0FBQ3JFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9icmVhay5qcz82YjhhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5UZXh0fSBUZXh0XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkJyZWFrfSBCcmVha1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGJyZWFrYCBub2RlIGludG8gaGFzdC5cbiAqXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXG4gKiBAcGFyYW0ge0JyZWFrfSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcmV0dXJucyB7QXJyYXk8RWxlbWVudCB8IFRleHQ+fVxuICogICBoYXN0IGVsZW1lbnQgY29udGVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhcmRCcmVhayhzdGF0ZSwgbm9kZSkge1xuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnZWxlbWVudCcsIHRhZ05hbWU6ICdicicsIHByb3BlcnRpZXM6IHt9LCBjaGlsZHJlbjogW119XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIFtzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KSwge3R5cGU6ICd0ZXh0JywgdmFsdWU6ICdcXG4nfV1cbn1cbiJdLCJuYW1lcyI6WyJoYXJkQnJlYWsiLCJzdGF0ZSIsIm5vZGUiLCJyZXN1bHQiLCJ0eXBlIiwidGFnTmFtZSIsInByb3BlcnRpZXMiLCJjaGlsZHJlbiIsInBhdGNoIiwiYXBwbHlEYXRhIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/break.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/code.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/code.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */ /**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function code(state, node) {\n    const value = node.value ? node.value + \"\\n\" : \"\";\n    // To do: next major, use `node.lang` w/o regex, the splittingâ€™s been going\n    // on for years in remark now.\n    const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null;\n    /** @type {Properties} */ const properties = {};\n    if (lang) {\n        properties.className = [\n            \"language-\" + lang\n        ];\n    }\n    // Create `<code>`.\n    /** @type {Element} */ let result = {\n        type: \"element\",\n        tagName: \"code\",\n        properties,\n        children: [\n            {\n                type: \"text\",\n                value\n            }\n        ]\n    };\n    if (node.meta) {\n        result.data = {\n            meta: node.meta\n        };\n    }\n    state.patch(node, result);\n    result = state.applyData(node, result);\n    // Create `<pre>`.\n    result = {\n        type: \"element\",\n        tagName: \"pre\",\n        properties: {},\n        children: [\n            result\n        ]\n    };\n    state.patch(node, result);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FFRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQSxLQUFLQyxLQUFLLEVBQUVDLElBQUk7SUFDOUIsTUFBTUMsUUFBUUQsS0FBS0MsS0FBSyxHQUFHRCxLQUFLQyxLQUFLLEdBQUcsT0FBTztJQUMvQywyRUFBMkU7SUFDM0UsOEJBQThCO0lBQzlCLE1BQU1DLE9BQU9GLEtBQUtFLElBQUksR0FBR0YsS0FBS0UsSUFBSSxDQUFDQyxLQUFLLENBQUMseUJBQXlCO0lBQ2xFLHVCQUF1QixHQUN2QixNQUFNQyxhQUFhLENBQUM7SUFFcEIsSUFBSUYsTUFBTTtRQUNSRSxXQUFXQyxTQUFTLEdBQUc7WUFBQyxjQUFjSDtTQUFLO0lBQzdDO0lBRUEsbUJBQW1CO0lBQ25CLG9CQUFvQixHQUNwQixJQUFJSSxTQUFTO1FBQ1hDLE1BQU07UUFDTkMsU0FBUztRQUNUSjtRQUNBSyxVQUFVO1lBQUM7Z0JBQUNGLE1BQU07Z0JBQVFOO1lBQUs7U0FBRTtJQUNuQztJQUVBLElBQUlELEtBQUtVLElBQUksRUFBRTtRQUNiSixPQUFPSyxJQUFJLEdBQUc7WUFBQ0QsTUFBTVYsS0FBS1UsSUFBSTtRQUFBO0lBQ2hDO0lBRUFYLE1BQU1hLEtBQUssQ0FBQ1osTUFBTU07SUFDbEJBLFNBQVNQLE1BQU1jLFNBQVMsQ0FBQ2IsTUFBTU07SUFFL0Isa0JBQWtCO0lBQ2xCQSxTQUFTO1FBQUNDLE1BQU07UUFBV0MsU0FBUztRQUFPSixZQUFZLENBQUM7UUFBR0ssVUFBVTtZQUFDSDtTQUFPO0lBQUE7SUFDN0VQLE1BQU1hLEtBQUssQ0FBQ1osTUFBTU07SUFDbEIsT0FBT0E7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tYWktdGVtcGxhdGUtcHJvLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvY29kZS5qcz8xMmZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Qcm9wZXJ0aWVzfSBQcm9wZXJ0aWVzXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkNvZGV9IENvZGVcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG5cbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGNvZGVgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7Q29kZX0gbm9kZVxuICogICBtZGFzdCBub2RlLlxuICogQHJldHVybnMge0VsZW1lbnR9XG4gKiAgIGhhc3Qgbm9kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvZGUoc3RhdGUsIG5vZGUpIHtcbiAgY29uc3QgdmFsdWUgPSBub2RlLnZhbHVlID8gbm9kZS52YWx1ZSArICdcXG4nIDogJydcbiAgLy8gVG8gZG86IG5leHQgbWFqb3IsIHVzZSBgbm9kZS5sYW5nYCB3L28gcmVnZXgsIHRoZSBzcGxpdHRpbmfigJlzIGJlZW4gZ29pbmdcbiAgLy8gb24gZm9yIHllYXJzIGluIHJlbWFyayBub3cuXG4gIGNvbnN0IGxhbmcgPSBub2RlLmxhbmcgPyBub2RlLmxhbmcubWF0Y2goL15bXiBcXHRdKyg/PVsgXFx0XXwkKS8pIDogbnVsbFxuICAvKiogQHR5cGUge1Byb3BlcnRpZXN9ICovXG4gIGNvbnN0IHByb3BlcnRpZXMgPSB7fVxuXG4gIGlmIChsYW5nKSB7XG4gICAgcHJvcGVydGllcy5jbGFzc05hbWUgPSBbJ2xhbmd1YWdlLScgKyBsYW5nXVxuICB9XG5cbiAgLy8gQ3JlYXRlIGA8Y29kZT5gLlxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGxldCByZXN1bHQgPSB7XG4gICAgdHlwZTogJ2VsZW1lbnQnLFxuICAgIHRhZ05hbWU6ICdjb2RlJyxcbiAgICBwcm9wZXJ0aWVzLFxuICAgIGNoaWxkcmVuOiBbe3R5cGU6ICd0ZXh0JywgdmFsdWV9XVxuICB9XG5cbiAgaWYgKG5vZGUubWV0YSkge1xuICAgIHJlc3VsdC5kYXRhID0ge21ldGE6IG5vZGUubWV0YX1cbiAgfVxuXG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmVzdWx0ID0gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcblxuICAvLyBDcmVhdGUgYDxwcmU+YC5cbiAgcmVzdWx0ID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZTogJ3ByZScsIHByb3BlcnRpZXM6IHt9LCBjaGlsZHJlbjogW3Jlc3VsdF19XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbImNvZGUiLCJzdGF0ZSIsIm5vZGUiLCJ2YWx1ZSIsImxhbmciLCJtYXRjaCIsInByb3BlcnRpZXMiLCJjbGFzc05hbWUiLCJyZXN1bHQiLCJ0eXBlIiwidGFnTmFtZSIsImNoaWxkcmVuIiwibWV0YSIsImRhdGEiLCJwYXRjaCIsImFwcGx5RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/code.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/delete.js":
/*!****************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/delete.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   strikethrough: () => (/* binding */ strikethrough)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */ /**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function strikethrough(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"del\",\n        properties: {},\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9kZWxldGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0EsY0FBY0MsS0FBSyxFQUFFQyxJQUFJO0lBQ3ZDLG9CQUFvQixHQUNwQixNQUFNQyxTQUFTO1FBQ2JDLE1BQU07UUFDTkMsU0FBUztRQUNUQyxZQUFZLENBQUM7UUFDYkMsVUFBVU4sTUFBTU8sR0FBRyxDQUFDTjtJQUN0QjtJQUNBRCxNQUFNUSxLQUFLLENBQUNQLE1BQU1DO0lBQ2xCLE9BQU9GLE1BQU1TLFNBQVMsQ0FBQ1IsTUFBTUM7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLWFpLXRlbXBsYXRlLXByby8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2RlbGV0ZS5qcz9jZTZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuRGVsZXRlfSBEZWxldGVcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG5cbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGRlbGV0ZWAgbm9kZSBpbnRvIGhhc3QuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtEZWxldGV9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpa2V0aHJvdWdoKHN0YXRlLCBub2RlKSB7XG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICB0YWdOYW1lOiAnZGVsJyxcbiAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICBjaGlsZHJlbjogc3RhdGUuYWxsKG5vZGUpXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJzdHJpa2V0aHJvdWdoIiwic3RhdGUiLCJub2RlIiwicmVzdWx0IiwidHlwZSIsInRhZ05hbWUiLCJwcm9wZXJ0aWVzIiwiY2hpbGRyZW4iLCJhbGwiLCJwYXRjaCIsImFwcGx5RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/delete.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js":
/*!******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emphasis: () => (/* binding */ emphasis)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function emphasis(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"em\",\n        properties: {},\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9lbXBoYXNpcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNBLFNBQVNDLEtBQUssRUFBRUMsSUFBSTtJQUNsQyxvQkFBb0IsR0FDcEIsTUFBTUMsU0FBUztRQUNiQyxNQUFNO1FBQ05DLFNBQVM7UUFDVEMsWUFBWSxDQUFDO1FBQ2JDLFVBQVVOLE1BQU1PLEdBQUcsQ0FBQ047SUFDdEI7SUFDQUQsTUFBTVEsS0FBSyxDQUFDUCxNQUFNQztJQUNsQixPQUFPRixNQUFNUyxTQUFTLENBQUNSLE1BQU1DO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9lbXBoYXNpcy5qcz83Mjk0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuRW1waGFzaXN9IEVtcGhhc2lzXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbi8qKlxuICogVHVybiBhbiBtZGFzdCBgZW1waGFzaXNgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7RW1waGFzaXN9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbXBoYXNpcyhzdGF0ZSwgbm9kZSkge1xuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgdGFnTmFtZTogJ2VtJyxcbiAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICBjaGlsZHJlbjogc3RhdGUuYWxsKG5vZGUpXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJlbXBoYXNpcyIsInN0YXRlIiwibm9kZSIsInJlc3VsdCIsInR5cGUiLCJ0YWdOYW1lIiwicHJvcGVydGllcyIsImNoaWxkcmVuIiwiYWxsIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   footnoteReference: () => (/* binding */ footnoteReference)\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"(ssr)/./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */ \n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function footnoteReference(state, node) {\n    const id = String(node.identifier).toUpperCase();\n    const safeId = (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(id.toLowerCase());\n    const index = state.footnoteOrder.indexOf(id);\n    /** @type {number} */ let counter;\n    if (index === -1) {\n        state.footnoteOrder.push(id);\n        state.footnoteCounts[id] = 1;\n        counter = state.footnoteOrder.length;\n    } else {\n        state.footnoteCounts[id]++;\n        counter = index + 1;\n    }\n    const reuseCounter = state.footnoteCounts[id];\n    /** @type {Element} */ const link = {\n        type: \"element\",\n        tagName: \"a\",\n        properties: {\n            href: \"#\" + state.clobberPrefix + \"fn-\" + safeId,\n            id: state.clobberPrefix + \"fnref-\" + safeId + (reuseCounter > 1 ? \"-\" + reuseCounter : \"\"),\n            dataFootnoteRef: true,\n            ariaDescribedBy: [\n                \"footnote-label\"\n            ]\n        },\n        children: [\n            {\n                type: \"text\",\n                value: String(counter)\n            }\n        ]\n    };\n    state.patch(node, link);\n    /** @type {Element} */ const sup = {\n        type: \"element\",\n        tagName: \"sup\",\n        properties: {},\n        children: [\n            link\n        ]\n    };\n    state.patch(node, sup);\n    return state.applyData(node, sup);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9mb290bm90ZS1yZWZlcmVuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztDQUlDLEdBRXVEO0FBRXhEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNDLGtCQUFrQkMsS0FBSyxFQUFFQyxJQUFJO0lBQzNDLE1BQU1DLEtBQUtDLE9BQU9GLEtBQUtHLFVBQVUsRUFBRUMsV0FBVztJQUM5QyxNQUFNQyxTQUFTUix5RUFBWUEsQ0FBQ0ksR0FBR0ssV0FBVztJQUMxQyxNQUFNQyxRQUFRUixNQUFNUyxhQUFhLENBQUNDLE9BQU8sQ0FBQ1I7SUFDMUMsbUJBQW1CLEdBQ25CLElBQUlTO0lBRUosSUFBSUgsVUFBVSxDQUFDLEdBQUc7UUFDaEJSLE1BQU1TLGFBQWEsQ0FBQ0csSUFBSSxDQUFDVjtRQUN6QkYsTUFBTWEsY0FBYyxDQUFDWCxHQUFHLEdBQUc7UUFDM0JTLFVBQVVYLE1BQU1TLGFBQWEsQ0FBQ0ssTUFBTTtJQUN0QyxPQUFPO1FBQ0xkLE1BQU1hLGNBQWMsQ0FBQ1gsR0FBRztRQUN4QlMsVUFBVUgsUUFBUTtJQUNwQjtJQUVBLE1BQU1PLGVBQWVmLE1BQU1hLGNBQWMsQ0FBQ1gsR0FBRztJQUU3QyxvQkFBb0IsR0FDcEIsTUFBTWMsT0FBTztRQUNYQyxNQUFNO1FBQ05DLFNBQVM7UUFDVEMsWUFBWTtZQUNWQyxNQUFNLE1BQU1wQixNQUFNcUIsYUFBYSxHQUFHLFFBQVFmO1lBQzFDSixJQUNFRixNQUFNcUIsYUFBYSxHQUNuQixXQUNBZixTQUNDUyxDQUFBQSxlQUFlLElBQUksTUFBTUEsZUFBZSxFQUFDO1lBQzVDTyxpQkFBaUI7WUFDakJDLGlCQUFpQjtnQkFBQzthQUFpQjtRQUNyQztRQUNBQyxVQUFVO1lBQUM7Z0JBQUNQLE1BQU07Z0JBQVFRLE9BQU90QixPQUFPUTtZQUFRO1NBQUU7SUFDcEQ7SUFDQVgsTUFBTTBCLEtBQUssQ0FBQ3pCLE1BQU1lO0lBRWxCLG9CQUFvQixHQUNwQixNQUFNVyxNQUFNO1FBQ1ZWLE1BQU07UUFDTkMsU0FBUztRQUNUQyxZQUFZLENBQUM7UUFDYkssVUFBVTtZQUFDUjtTQUFLO0lBQ2xCO0lBQ0FoQixNQUFNMEIsS0FBSyxDQUFDekIsTUFBTTBCO0lBQ2xCLE9BQU8zQixNQUFNNEIsU0FBUyxDQUFDM0IsTUFBTTBCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9mb290bm90ZS1yZWZlcmVuY2UuanM/OGY5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuRm9vdG5vdGVSZWZlcmVuY2V9IEZvb3Rub3RlUmVmZXJlbmNlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG5pbXBvcnQge25vcm1hbGl6ZVVyaX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtc2FuaXRpemUtdXJpJ1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGZvb3Rub3RlUmVmZXJlbmNlYCBub2RlIGludG8gaGFzdC5cbiAqXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXG4gKiBAcGFyYW0ge0Zvb3Rub3RlUmVmZXJlbmNlfSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cbiAqICAgaGFzdCBub2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9vdG5vdGVSZWZlcmVuY2Uoc3RhdGUsIG5vZGUpIHtcbiAgY29uc3QgaWQgPSBTdHJpbmcobm9kZS5pZGVudGlmaWVyKS50b1VwcGVyQ2FzZSgpXG4gIGNvbnN0IHNhZmVJZCA9IG5vcm1hbGl6ZVVyaShpZC50b0xvd2VyQ2FzZSgpKVxuICBjb25zdCBpbmRleCA9IHN0YXRlLmZvb3Rub3RlT3JkZXIuaW5kZXhPZihpZClcbiAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gIGxldCBjb3VudGVyXG5cbiAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgIHN0YXRlLmZvb3Rub3RlT3JkZXIucHVzaChpZClcbiAgICBzdGF0ZS5mb290bm90ZUNvdW50c1tpZF0gPSAxXG4gICAgY291bnRlciA9IHN0YXRlLmZvb3Rub3RlT3JkZXIubGVuZ3RoXG4gIH0gZWxzZSB7XG4gICAgc3RhdGUuZm9vdG5vdGVDb3VudHNbaWRdKytcbiAgICBjb3VudGVyID0gaW5kZXggKyAxXG4gIH1cblxuICBjb25zdCByZXVzZUNvdW50ZXIgPSBzdGF0ZS5mb290bm90ZUNvdW50c1tpZF1cblxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IGxpbmsgPSB7XG4gICAgdHlwZTogJ2VsZW1lbnQnLFxuICAgIHRhZ05hbWU6ICdhJyxcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBocmVmOiAnIycgKyBzdGF0ZS5jbG9iYmVyUHJlZml4ICsgJ2ZuLScgKyBzYWZlSWQsXG4gICAgICBpZDpcbiAgICAgICAgc3RhdGUuY2xvYmJlclByZWZpeCArXG4gICAgICAgICdmbnJlZi0nICtcbiAgICAgICAgc2FmZUlkICtcbiAgICAgICAgKHJldXNlQ291bnRlciA+IDEgPyAnLScgKyByZXVzZUNvdW50ZXIgOiAnJyksXG4gICAgICBkYXRhRm9vdG5vdGVSZWY6IHRydWUsXG4gICAgICBhcmlhRGVzY3JpYmVkQnk6IFsnZm9vdG5vdGUtbGFiZWwnXVxuICAgIH0sXG4gICAgY2hpbGRyZW46IFt7dHlwZTogJ3RleHQnLCB2YWx1ZTogU3RyaW5nKGNvdW50ZXIpfV1cbiAgfVxuICBzdGF0ZS5wYXRjaChub2RlLCBsaW5rKVxuXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3Qgc3VwID0ge1xuICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICB0YWdOYW1lOiAnc3VwJyxcbiAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICBjaGlsZHJlbjogW2xpbmtdXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgc3VwKVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHN1cClcbn1cbiJdLCJuYW1lcyI6WyJub3JtYWxpemVVcmkiLCJmb290bm90ZVJlZmVyZW5jZSIsInN0YXRlIiwibm9kZSIsImlkIiwiU3RyaW5nIiwiaWRlbnRpZmllciIsInRvVXBwZXJDYXNlIiwic2FmZUlkIiwidG9Mb3dlckNhc2UiLCJpbmRleCIsImZvb3Rub3RlT3JkZXIiLCJpbmRleE9mIiwiY291bnRlciIsInB1c2giLCJmb290bm90ZUNvdW50cyIsImxlbmd0aCIsInJldXNlQ291bnRlciIsImxpbmsiLCJ0eXBlIiwidGFnTmFtZSIsInByb3BlcnRpZXMiLCJocmVmIiwiY2xvYmJlclByZWZpeCIsImRhdGFGb290bm90ZVJlZiIsImFyaWFEZXNjcmliZWRCeSIsImNoaWxkcmVuIiwidmFsdWUiLCJwYXRjaCIsInN1cCIsImFwcGx5RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js":
/*!******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/footnote.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   footnote: () => (/* binding */ footnote)\n/* harmony export */ });\n/* harmony import */ var _footnote_reference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./footnote-reference.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js\");\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */ \n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// â€¦are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function footnote(state, node) {\n    const footnoteById = state.footnoteById;\n    let no = 1;\n    while(no in footnoteById)no++;\n    const identifier = String(no);\n    footnoteById[identifier] = {\n        type: \"footnoteDefinition\",\n        identifier,\n        children: [\n            {\n                type: \"paragraph\",\n                children: node.children\n            }\n        ],\n        position: node.position\n    };\n    return (0,_footnote_reference_js__WEBPACK_IMPORTED_MODULE_0__.footnoteReference)(state, {\n        type: \"footnoteReference\",\n        identifier,\n        position: node.position\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9mb290bm90ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7O0NBSUMsR0FFd0Q7QUFFekQsb0JBQW9CO0FBQ3BCLGdFQUFnRTtBQUNoRSx5REFBeUQ7QUFDekQsZ0RBQWdEO0FBQ2hELDBDQUEwQztBQUUxQzs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQyxTQUFTQyxLQUFLLEVBQUVDLElBQUk7SUFDbEMsTUFBTUMsZUFBZUYsTUFBTUUsWUFBWTtJQUN2QyxJQUFJQyxLQUFLO0lBRVQsTUFBT0EsTUFBTUQsYUFBY0M7SUFFM0IsTUFBTUMsYUFBYUMsT0FBT0Y7SUFFMUJELFlBQVksQ0FBQ0UsV0FBVyxHQUFHO1FBQ3pCRSxNQUFNO1FBQ05GO1FBQ0FHLFVBQVU7WUFBQztnQkFBQ0QsTUFBTTtnQkFBYUMsVUFBVU4sS0FBS00sUUFBUTtZQUFBO1NBQUU7UUFDeERDLFVBQVVQLEtBQUtPLFFBQVE7SUFDekI7SUFFQSxPQUFPVix5RUFBaUJBLENBQUNFLE9BQU87UUFDOUJNLE1BQU07UUFDTkY7UUFDQUksVUFBVVAsS0FBS08sUUFBUTtJQUN6QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9mb290bm90ZS5qcz9iYzFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuRm9vdG5vdGV9IEZvb3Rub3RlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7Zm9vdG5vdGVSZWZlcmVuY2V9IGZyb20gJy4vZm9vdG5vdGUtcmVmZXJlbmNlLmpzJ1xuXG4vLyBUbyBkbzogd2hlbiBib3RoOlxuLy8gKiA8aHR0cHM6Ly9naXRodWIuY29tL21pY3JvbWFyay9taWNyb21hcmstZXh0ZW5zaW9uLWZvb3Rub3RlPlxuLy8gKiA8aHR0cHM6Ly9naXRodWIuY29tL3N5bnRheC10cmVlL21kYXN0LXV0aWwtZm9vdG5vdGU+XG4vLyDigKZhcmUgYXJjaGl2ZWQsIHJlbW92ZSB0aGlzIChhbHNvIGZyb20gbWRhc3QpLlxuLy8gVGhlc2UgaW5saW5lIG5vdGVzIGFyZSBub3QgdXNlZCBpbiBHRk0uXG5cbi8qKlxuICogVHVybiBhbiBtZGFzdCBgZm9vdG5vdGVgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7Rm9vdG5vdGV9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb290bm90ZShzdGF0ZSwgbm9kZSkge1xuICBjb25zdCBmb290bm90ZUJ5SWQgPSBzdGF0ZS5mb290bm90ZUJ5SWRcbiAgbGV0IG5vID0gMVxuXG4gIHdoaWxlIChubyBpbiBmb290bm90ZUJ5SWQpIG5vKytcblxuICBjb25zdCBpZGVudGlmaWVyID0gU3RyaW5nKG5vKVxuXG4gIGZvb3Rub3RlQnlJZFtpZGVudGlmaWVyXSA9IHtcbiAgICB0eXBlOiAnZm9vdG5vdGVEZWZpbml0aW9uJyxcbiAgICBpZGVudGlmaWVyLFxuICAgIGNoaWxkcmVuOiBbe3R5cGU6ICdwYXJhZ3JhcGgnLCBjaGlsZHJlbjogbm9kZS5jaGlsZHJlbn1dLFxuICAgIHBvc2l0aW9uOiBub2RlLnBvc2l0aW9uXG4gIH1cblxuICByZXR1cm4gZm9vdG5vdGVSZWZlcmVuY2Uoc3RhdGUsIHtcbiAgICB0eXBlOiAnZm9vdG5vdGVSZWZlcmVuY2UnLFxuICAgIGlkZW50aWZpZXIsXG4gICAgcG9zaXRpb246IG5vZGUucG9zaXRpb25cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJmb290bm90ZVJlZmVyZW5jZSIsImZvb3Rub3RlIiwic3RhdGUiLCJub2RlIiwiZm9vdG5vdGVCeUlkIiwibm8iLCJpZGVudGlmaWVyIiwiU3RyaW5nIiwidHlwZSIsImNoaWxkcmVuIiwicG9zaXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/heading.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/heading.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   heading: () => (/* binding */ heading)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function heading(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"h\" + node.depth,\n        properties: {},\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9oZWFkaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0EsUUFBUUMsS0FBSyxFQUFFQyxJQUFJO0lBQ2pDLG9CQUFvQixHQUNwQixNQUFNQyxTQUFTO1FBQ2JDLE1BQU07UUFDTkMsU0FBUyxNQUFNSCxLQUFLSSxLQUFLO1FBQ3pCQyxZQUFZLENBQUM7UUFDYkMsVUFBVVAsTUFBTVEsR0FBRyxDQUFDUDtJQUN0QjtJQUNBRCxNQUFNUyxLQUFLLENBQUNSLE1BQU1DO0lBQ2xCLE9BQU9GLE1BQU1VLFNBQVMsQ0FBQ1QsTUFBTUM7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLWFpLXRlbXBsYXRlLXByby8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL2hlYWRpbmcuanM/YTcwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkhlYWRpbmd9IEhlYWRpbmdcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuLyoqXG4gKiBUdXJuIGFuIG1kYXN0IGBoZWFkaW5nYCBub2RlIGludG8gaGFzdC5cbiAqXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXG4gKiBAcGFyYW0ge0hlYWRpbmd9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoZWFkaW5nKHN0YXRlLCBub2RlKSB7XG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICB0YWdOYW1lOiAnaCcgKyBub2RlLmRlcHRoLFxuICAgIHByb3BlcnRpZXM6IHt9LFxuICAgIGNoaWxkcmVuOiBzdGF0ZS5hbGwobm9kZSlcbiAgfVxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxufVxuIl0sIm5hbWVzIjpbImhlYWRpbmciLCJzdGF0ZSIsIm5vZGUiLCJyZXN1bHQiLCJ0eXBlIiwidGFnTmFtZSIsImRlcHRoIiwicHJvcGVydGllcyIsImNoaWxkcmVuIiwiYWxsIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/heading.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/html.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/html.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   html: () => (/* binding */ html)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */ /**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */ function html(state, node) {\n    if (state.dangerous) {\n        /** @type {Raw} */ const result = {\n            type: \"raw\",\n            value: node.value\n        };\n        state.patch(node, result);\n        return state.applyData(node, result);\n    }\n    // To do: next major: return `undefined`.\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9odG1sLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVEOzs7Ozs7Ozs7O0NBVUMsR0FDTSxTQUFTQSxLQUFLQyxLQUFLLEVBQUVDLElBQUk7SUFDOUIsSUFBSUQsTUFBTUUsU0FBUyxFQUFFO1FBQ25CLGdCQUFnQixHQUNoQixNQUFNQyxTQUFTO1lBQUNDLE1BQU07WUFBT0MsT0FBT0osS0FBS0ksS0FBSztRQUFBO1FBQzlDTCxNQUFNTSxLQUFLLENBQUNMLE1BQU1FO1FBQ2xCLE9BQU9ILE1BQU1PLFNBQVMsQ0FBQ04sTUFBTUU7SUFDL0I7SUFFQSx5Q0FBeUM7SUFDekMsT0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9odG1sLmpzP2EzNzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5IVE1MfSBIdG1sXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vLi4vaW5kZXguanMnKS5SYXd9IFJhd1xuICovXG5cbi8qKlxuICogVHVybiBhbiBtZGFzdCBgaHRtbGAgbm9kZSBpbnRvIGhhc3QgKGByYXdgIG5vZGUgaW4gZGFuZ2Vyb3VzIG1vZGUsIG90aGVyd2lzZVxuICogbm90aGluZykuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtIdG1sfSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcmV0dXJucyB7UmF3IHwgRWxlbWVudCB8IG51bGx9XG4gKiAgIGhhc3Qgbm9kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGh0bWwoc3RhdGUsIG5vZGUpIHtcbiAgaWYgKHN0YXRlLmRhbmdlcm91cykge1xuICAgIC8qKiBAdHlwZSB7UmF3fSAqL1xuICAgIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAncmF3JywgdmFsdWU6IG5vZGUudmFsdWV9XG4gICAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICAgIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxuICB9XG5cbiAgLy8gVG8gZG86IG5leHQgbWFqb3I6IHJldHVybiBgdW5kZWZpbmVkYC5cbiAgcmV0dXJuIG51bGxcbn1cbiJdLCJuYW1lcyI6WyJodG1sIiwic3RhdGUiLCJub2RlIiwiZGFuZ2Vyb3VzIiwicmVzdWx0IiwidHlwZSIsInZhbHVlIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/html.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   imageReference: () => (/* binding */ imageReference)\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"(ssr)/./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/* harmony import */ var _revert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../revert.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/revert.js\");\n/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */ \n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */ function imageReference(state, node) {\n    const def = state.definition(node.identifier);\n    if (!def) {\n        return (0,_revert_js__WEBPACK_IMPORTED_MODULE_0__.revert)(state, node);\n    }\n    /** @type {Properties} */ const properties = {\n        src: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__.normalizeUri)(def.url || \"\"),\n        alt: node.alt\n    };\n    if (def.title !== null && def.title !== undefined) {\n        properties.title = def.title;\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"img\",\n        properties,\n        children: []\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbWFnZS1yZWZlcmVuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztDQU1DLEdBRXVEO0FBQ3JCO0FBRW5DOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNFLGVBQWVDLEtBQUssRUFBRUMsSUFBSTtJQUN4QyxNQUFNQyxNQUFNRixNQUFNRyxVQUFVLENBQUNGLEtBQUtHLFVBQVU7SUFFNUMsSUFBSSxDQUFDRixLQUFLO1FBQ1IsT0FBT0osa0RBQU1BLENBQUNFLE9BQU9DO0lBQ3ZCO0lBRUEsdUJBQXVCLEdBQ3ZCLE1BQU1JLGFBQWE7UUFBQ0MsS0FBS1QseUVBQVlBLENBQUNLLElBQUlLLEdBQUcsSUFBSTtRQUFLQyxLQUFLUCxLQUFLTyxHQUFHO0lBQUE7SUFFbkUsSUFBSU4sSUFBSU8sS0FBSyxLQUFLLFFBQVFQLElBQUlPLEtBQUssS0FBS0MsV0FBVztRQUNqREwsV0FBV0ksS0FBSyxHQUFHUCxJQUFJTyxLQUFLO0lBQzlCO0lBRUEsb0JBQW9CLEdBQ3BCLE1BQU1FLFNBQVM7UUFBQ0MsTUFBTTtRQUFXQyxTQUFTO1FBQU9SO1FBQVlTLFVBQVUsRUFBRTtJQUFBO0lBQ3pFZCxNQUFNZSxLQUFLLENBQUNkLE1BQU1VO0lBQ2xCLE9BQU9YLE1BQU1nQixTQUFTLENBQUNmLE1BQU1VO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbWFnZS1yZWZlcmVuY2UuanM/N2NlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50Q29udGVudH0gRWxlbWVudENvbnRlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUHJvcGVydGllc30gUHJvcGVydGllc1xuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5JbWFnZVJlZmVyZW5jZX0gSW1hZ2VSZWZlcmVuY2VcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtub3JtYWxpemVVcml9IGZyb20gJ21pY3JvbWFyay11dGlsLXNhbml0aXplLXVyaSdcbmltcG9ydCB7cmV2ZXJ0fSBmcm9tICcuLi9yZXZlcnQuanMnXG5cbi8qKlxuICogVHVybiBhbiBtZGFzdCBgaW1hZ2VSZWZlcmVuY2VgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7SW1hZ2VSZWZlcmVuY2V9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50Q29udGVudCB8IEFycmF5PEVsZW1lbnRDb250ZW50Pn1cbiAqICAgaGFzdCBub2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW1hZ2VSZWZlcmVuY2Uoc3RhdGUsIG5vZGUpIHtcbiAgY29uc3QgZGVmID0gc3RhdGUuZGVmaW5pdGlvbihub2RlLmlkZW50aWZpZXIpXG5cbiAgaWYgKCFkZWYpIHtcbiAgICByZXR1cm4gcmV2ZXJ0KHN0YXRlLCBub2RlKVxuICB9XG5cbiAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xuICBjb25zdCBwcm9wZXJ0aWVzID0ge3NyYzogbm9ybWFsaXplVXJpKGRlZi51cmwgfHwgJycpLCBhbHQ6IG5vZGUuYWx0fVxuXG4gIGlmIChkZWYudGl0bGUgIT09IG51bGwgJiYgZGVmLnRpdGxlICE9PSB1bmRlZmluZWQpIHtcbiAgICBwcm9wZXJ0aWVzLnRpdGxlID0gZGVmLnRpdGxlXG4gIH1cblxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnZWxlbWVudCcsIHRhZ05hbWU6ICdpbWcnLCBwcm9wZXJ0aWVzLCBjaGlsZHJlbjogW119XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXG59XG4iXSwibmFtZXMiOlsibm9ybWFsaXplVXJpIiwicmV2ZXJ0IiwiaW1hZ2VSZWZlcmVuY2UiLCJzdGF0ZSIsIm5vZGUiLCJkZWYiLCJkZWZpbml0aW9uIiwiaWRlbnRpZmllciIsInByb3BlcnRpZXMiLCJzcmMiLCJ1cmwiLCJhbHQiLCJ0aXRsZSIsInVuZGVmaW5lZCIsInJlc3VsdCIsInR5cGUiLCJ0YWdOYW1lIiwiY2hpbGRyZW4iLCJwYXRjaCIsImFwcGx5RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/image.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/image.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   image: () => (/* binding */ image)\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"(ssr)/./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */ \n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function image(state, node) {\n    /** @type {Properties} */ const properties = {\n        src: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(node.url)\n    };\n    if (node.alt !== null && node.alt !== undefined) {\n        properties.alt = node.alt;\n    }\n    if (node.title !== null && node.title !== undefined) {\n        properties.title = node.title;\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"img\",\n        properties,\n        children: []\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbWFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXVEO0FBRXhEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNDLE1BQU1DLEtBQUssRUFBRUMsSUFBSTtJQUMvQix1QkFBdUIsR0FDdkIsTUFBTUMsYUFBYTtRQUFDQyxLQUFLTCx5RUFBWUEsQ0FBQ0csS0FBS0csR0FBRztJQUFDO0lBRS9DLElBQUlILEtBQUtJLEdBQUcsS0FBSyxRQUFRSixLQUFLSSxHQUFHLEtBQUtDLFdBQVc7UUFDL0NKLFdBQVdHLEdBQUcsR0FBR0osS0FBS0ksR0FBRztJQUMzQjtJQUVBLElBQUlKLEtBQUtNLEtBQUssS0FBSyxRQUFRTixLQUFLTSxLQUFLLEtBQUtELFdBQVc7UUFDbkRKLFdBQVdLLEtBQUssR0FBR04sS0FBS00sS0FBSztJQUMvQjtJQUVBLG9CQUFvQixHQUNwQixNQUFNQyxTQUFTO1FBQUNDLE1BQU07UUFBV0MsU0FBUztRQUFPUjtRQUFZUyxVQUFVLEVBQUU7SUFBQTtJQUN6RVgsTUFBTVksS0FBSyxDQUFDWCxNQUFNTztJQUNsQixPQUFPUixNQUFNYSxTQUFTLENBQUNaLE1BQU1PO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbWFnZS5qcz9lMWQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Qcm9wZXJ0aWVzfSBQcm9wZXJ0aWVzXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkltYWdlfSBJbWFnZVxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG5pbXBvcnQge25vcm1hbGl6ZVVyaX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtc2FuaXRpemUtdXJpJ1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGltYWdlYCBub2RlIGludG8gaGFzdC5cbiAqXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXG4gKiBAcGFyYW0ge0ltYWdlfSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cbiAqICAgaGFzdCBub2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW1hZ2Uoc3RhdGUsIG5vZGUpIHtcbiAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xuICBjb25zdCBwcm9wZXJ0aWVzID0ge3NyYzogbm9ybWFsaXplVXJpKG5vZGUudXJsKX1cblxuICBpZiAobm9kZS5hbHQgIT09IG51bGwgJiYgbm9kZS5hbHQgIT09IHVuZGVmaW5lZCkge1xuICAgIHByb3BlcnRpZXMuYWx0ID0gbm9kZS5hbHRcbiAgfVxuXG4gIGlmIChub2RlLnRpdGxlICE9PSBudWxsICYmIG5vZGUudGl0bGUgIT09IHVuZGVmaW5lZCkge1xuICAgIHByb3BlcnRpZXMudGl0bGUgPSBub2RlLnRpdGxlXG4gIH1cblxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnZWxlbWVudCcsIHRhZ05hbWU6ICdpbWcnLCBwcm9wZXJ0aWVzLCBjaGlsZHJlbjogW119XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXG59XG4iXSwibmFtZXMiOlsibm9ybWFsaXplVXJpIiwiaW1hZ2UiLCJzdGF0ZSIsIm5vZGUiLCJwcm9wZXJ0aWVzIiwic3JjIiwidXJsIiwiYWx0IiwidW5kZWZpbmVkIiwidGl0bGUiLCJyZXN1bHQiLCJ0eXBlIiwidGFnTmFtZSIsImNoaWxkcmVuIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/image.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: () => (/* binding */ handlers)\n/* harmony export */ });\n/* harmony import */ var _blockquote_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blockquote.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js\");\n/* harmony import */ var _break_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./break.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/break.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/code.js\");\n/* harmony import */ var _delete_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delete.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/delete.js\");\n/* harmony import */ var _emphasis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./emphasis.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js\");\n/* harmony import */ var _footnote_reference_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./footnote-reference.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js\");\n/* harmony import */ var _footnote_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./footnote.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js\");\n/* harmony import */ var _heading_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./heading.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/heading.js\");\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./html.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/html.js\");\n/* harmony import */ var _image_reference_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./image-reference.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js\");\n/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./image.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/image.js\");\n/* harmony import */ var _inline_code_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./inline-code.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js\");\n/* harmony import */ var _link_reference_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./link-reference.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js\");\n/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./link.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/link.js\");\n/* harmony import */ var _list_item_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./list-item.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js\");\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./list.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/list.js\");\n/* harmony import */ var _paragraph_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./paragraph.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js\");\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./root.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/root.js\");\n/* harmony import */ var _strong_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./strong.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/strong.js\");\n/* harmony import */ var _table_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./table.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table.js\");\n/* harmony import */ var _table_row_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./table-row.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js\");\n/* harmony import */ var _table_cell_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./table-cell.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js\");\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./text.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/text.js\");\n/* harmony import */ var _thematic_break_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./thematic-break.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Default handlers for nodes.\n */ const handlers = {\n    blockquote: _blockquote_js__WEBPACK_IMPORTED_MODULE_0__.blockquote,\n    break: _break_js__WEBPACK_IMPORTED_MODULE_1__.hardBreak,\n    code: _code_js__WEBPACK_IMPORTED_MODULE_2__.code,\n    delete: _delete_js__WEBPACK_IMPORTED_MODULE_3__.strikethrough,\n    emphasis: _emphasis_js__WEBPACK_IMPORTED_MODULE_4__.emphasis,\n    footnoteReference: _footnote_reference_js__WEBPACK_IMPORTED_MODULE_5__.footnoteReference,\n    footnote: _footnote_js__WEBPACK_IMPORTED_MODULE_6__.footnote,\n    heading: _heading_js__WEBPACK_IMPORTED_MODULE_7__.heading,\n    html: _html_js__WEBPACK_IMPORTED_MODULE_8__.html,\n    imageReference: _image_reference_js__WEBPACK_IMPORTED_MODULE_9__.imageReference,\n    image: _image_js__WEBPACK_IMPORTED_MODULE_10__.image,\n    inlineCode: _inline_code_js__WEBPACK_IMPORTED_MODULE_11__.inlineCode,\n    linkReference: _link_reference_js__WEBPACK_IMPORTED_MODULE_12__.linkReference,\n    link: _link_js__WEBPACK_IMPORTED_MODULE_13__.link,\n    listItem: _list_item_js__WEBPACK_IMPORTED_MODULE_14__.listItem,\n    list: _list_js__WEBPACK_IMPORTED_MODULE_15__.list,\n    paragraph: _paragraph_js__WEBPACK_IMPORTED_MODULE_16__.paragraph,\n    root: _root_js__WEBPACK_IMPORTED_MODULE_17__.root,\n    strong: _strong_js__WEBPACK_IMPORTED_MODULE_18__.strong,\n    table: _table_js__WEBPACK_IMPORTED_MODULE_19__.table,\n    tableCell: _table_cell_js__WEBPACK_IMPORTED_MODULE_20__.tableCell,\n    tableRow: _table_row_js__WEBPACK_IMPORTED_MODULE_21__.tableRow,\n    text: _text_js__WEBPACK_IMPORTED_MODULE_22__.text,\n    thematicBreak: _thematic_break_js__WEBPACK_IMPORTED_MODULE_23__.thematicBreak,\n    toml: ignore,\n    yaml: ignore,\n    definition: ignore,\n    footnoteDefinition: ignore\n};\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n    // To do: next major: return `undefined`.\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ047QUFDTjtBQUNXO0FBQ0g7QUFDbUI7QUFDbkI7QUFDRjtBQUNOO0FBQ3FCO0FBQ25CO0FBQ1c7QUFDTTtBQUNuQjtBQUNTO0FBQ1Q7QUFDVTtBQUNWO0FBQ0k7QUFDRjtBQUNPO0FBQ0U7QUFDWDtBQUNtQjtBQUVqRDs7Q0FFQyxHQUNNLE1BQU13QixXQUFXO0lBQ3RCeEIsVUFBVUEsd0RBQUFBO0lBQ1Z5QixPQUFPeEIsZ0RBQVNBO0lBQ2hCQyxJQUFJQSw0Q0FBQUE7SUFDSndCLFFBQVF2QixxREFBYUE7SUFDckJDLFFBQVFBLG9EQUFBQTtJQUNSQyxpQkFBaUJBLHVFQUFBQTtJQUNqQkMsUUFBUUEsb0RBQUFBO0lBQ1JDLE9BQU9BLGtEQUFBQTtJQUNQQyxJQUFJQSw0Q0FBQUE7SUFDSkMsY0FBY0EsaUVBQUFBO0lBQ2RDLEtBQUtBLCtDQUFBQTtJQUNMQyxVQUFVQSwwREFBQUE7SUFDVkMsYUFBYUEsZ0VBQUFBO0lBQ2JDLElBQUlBLDZDQUFBQTtJQUNKQyxRQUFRQSxzREFBQUE7SUFDUkMsSUFBSUEsNkNBQUFBO0lBQ0pDLFNBQVNBLHVEQUFBQTtJQUNUQyxJQUFJQSw2Q0FBQUE7SUFDSkMsTUFBTUEsaURBQUFBO0lBQ05DLEtBQUtBLCtDQUFBQTtJQUNMRSxTQUFTQSx3REFBQUE7SUFDVEQsUUFBUUEsc0RBQUFBO0lBQ1JFLElBQUlBLDZDQUFBQTtJQUNKQyxhQUFhQSxnRUFBQUE7SUFDYkksTUFBTUM7SUFDTkMsTUFBTUQ7SUFDTkUsWUFBWUY7SUFDWkcsb0JBQW9CSDtBQUN0QixFQUFDO0FBRUQsNkNBQTZDO0FBQzdDLFNBQVNBO0lBQ1AseUNBQXlDO0lBQ3pDLE9BQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tYWktdGVtcGxhdGUtcHJvLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvaW5kZXguanM/YmIyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Jsb2NrcXVvdGV9IGZyb20gJy4vYmxvY2txdW90ZS5qcydcbmltcG9ydCB7aGFyZEJyZWFrfSBmcm9tICcuL2JyZWFrLmpzJ1xuaW1wb3J0IHtjb2RlfSBmcm9tICcuL2NvZGUuanMnXG5pbXBvcnQge3N0cmlrZXRocm91Z2h9IGZyb20gJy4vZGVsZXRlLmpzJ1xuaW1wb3J0IHtlbXBoYXNpc30gZnJvbSAnLi9lbXBoYXNpcy5qcydcbmltcG9ydCB7Zm9vdG5vdGVSZWZlcmVuY2V9IGZyb20gJy4vZm9vdG5vdGUtcmVmZXJlbmNlLmpzJ1xuaW1wb3J0IHtmb290bm90ZX0gZnJvbSAnLi9mb290bm90ZS5qcydcbmltcG9ydCB7aGVhZGluZ30gZnJvbSAnLi9oZWFkaW5nLmpzJ1xuaW1wb3J0IHtodG1sfSBmcm9tICcuL2h0bWwuanMnXG5pbXBvcnQge2ltYWdlUmVmZXJlbmNlfSBmcm9tICcuL2ltYWdlLXJlZmVyZW5jZS5qcydcbmltcG9ydCB7aW1hZ2V9IGZyb20gJy4vaW1hZ2UuanMnXG5pbXBvcnQge2lubGluZUNvZGV9IGZyb20gJy4vaW5saW5lLWNvZGUuanMnXG5pbXBvcnQge2xpbmtSZWZlcmVuY2V9IGZyb20gJy4vbGluay1yZWZlcmVuY2UuanMnXG5pbXBvcnQge2xpbmt9IGZyb20gJy4vbGluay5qcydcbmltcG9ydCB7bGlzdEl0ZW19IGZyb20gJy4vbGlzdC1pdGVtLmpzJ1xuaW1wb3J0IHtsaXN0fSBmcm9tICcuL2xpc3QuanMnXG5pbXBvcnQge3BhcmFncmFwaH0gZnJvbSAnLi9wYXJhZ3JhcGguanMnXG5pbXBvcnQge3Jvb3R9IGZyb20gJy4vcm9vdC5qcydcbmltcG9ydCB7c3Ryb25nfSBmcm9tICcuL3N0cm9uZy5qcydcbmltcG9ydCB7dGFibGV9IGZyb20gJy4vdGFibGUuanMnXG5pbXBvcnQge3RhYmxlUm93fSBmcm9tICcuL3RhYmxlLXJvdy5qcydcbmltcG9ydCB7dGFibGVDZWxsfSBmcm9tICcuL3RhYmxlLWNlbGwuanMnXG5pbXBvcnQge3RleHR9IGZyb20gJy4vdGV4dC5qcydcbmltcG9ydCB7dGhlbWF0aWNCcmVha30gZnJvbSAnLi90aGVtYXRpYy1icmVhay5qcydcblxuLyoqXG4gKiBEZWZhdWx0IGhhbmRsZXJzIGZvciBub2Rlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGhhbmRsZXJzID0ge1xuICBibG9ja3F1b3RlLFxuICBicmVhazogaGFyZEJyZWFrLFxuICBjb2RlLFxuICBkZWxldGU6IHN0cmlrZXRocm91Z2gsXG4gIGVtcGhhc2lzLFxuICBmb290bm90ZVJlZmVyZW5jZSxcbiAgZm9vdG5vdGUsXG4gIGhlYWRpbmcsXG4gIGh0bWwsXG4gIGltYWdlUmVmZXJlbmNlLFxuICBpbWFnZSxcbiAgaW5saW5lQ29kZSxcbiAgbGlua1JlZmVyZW5jZSxcbiAgbGluayxcbiAgbGlzdEl0ZW0sXG4gIGxpc3QsXG4gIHBhcmFncmFwaCxcbiAgcm9vdCxcbiAgc3Ryb25nLFxuICB0YWJsZSxcbiAgdGFibGVDZWxsLFxuICB0YWJsZVJvdyxcbiAgdGV4dCxcbiAgdGhlbWF0aWNCcmVhayxcbiAgdG9tbDogaWdub3JlLFxuICB5YW1sOiBpZ25vcmUsXG4gIGRlZmluaXRpb246IGlnbm9yZSxcbiAgZm9vdG5vdGVEZWZpbml0aW9uOiBpZ25vcmVcbn1cblxuLy8gUmV0dXJuIG5vdGhpbmcgZm9yIG5vZGVzIHRoYXQgYXJlIGlnbm9yZWQuXG5mdW5jdGlvbiBpZ25vcmUoKSB7XG4gIC8vIFRvIGRvOiBuZXh0IG1ham9yOiByZXR1cm4gYHVuZGVmaW5lZGAuXG4gIHJldHVybiBudWxsXG59XG4iXSwibmFtZXMiOlsiYmxvY2txdW90ZSIsImhhcmRCcmVhayIsImNvZGUiLCJzdHJpa2V0aHJvdWdoIiwiZW1waGFzaXMiLCJmb290bm90ZVJlZmVyZW5jZSIsImZvb3Rub3RlIiwiaGVhZGluZyIsImh0bWwiLCJpbWFnZVJlZmVyZW5jZSIsImltYWdlIiwiaW5saW5lQ29kZSIsImxpbmtSZWZlcmVuY2UiLCJsaW5rIiwibGlzdEl0ZW0iLCJsaXN0IiwicGFyYWdyYXBoIiwicm9vdCIsInN0cm9uZyIsInRhYmxlIiwidGFibGVSb3ciLCJ0YWJsZUNlbGwiLCJ0ZXh0IiwidGhlbWF0aWNCcmVhayIsImhhbmRsZXJzIiwiYnJlYWsiLCJkZWxldGUiLCJ0b21sIiwiaWdub3JlIiwieWFtbCIsImRlZmluaXRpb24iLCJmb290bm90ZURlZmluaXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inlineCode: () => (/* binding */ inlineCode)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function inlineCode(state, node) {\n    /** @type {Text} */ const text = {\n        type: \"text\",\n        value: node.value.replace(/\\r?\\n|\\r/g, \" \")\n    };\n    state.patch(node, text);\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"code\",\n        properties: {},\n        children: [\n            text\n        ]\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbmxpbmUtY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0NBS0MsR0FFRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQSxXQUFXQyxLQUFLLEVBQUVDLElBQUk7SUFDcEMsaUJBQWlCLEdBQ2pCLE1BQU1DLE9BQU87UUFBQ0MsTUFBTTtRQUFRQyxPQUFPSCxLQUFLRyxLQUFLLENBQUNDLE9BQU8sQ0FBQyxhQUFhO0lBQUk7SUFDdkVMLE1BQU1NLEtBQUssQ0FBQ0wsTUFBTUM7SUFFbEIsb0JBQW9CLEdBQ3BCLE1BQU1LLFNBQVM7UUFDYkosTUFBTTtRQUNOSyxTQUFTO1FBQ1RDLFlBQVksQ0FBQztRQUNiQyxVQUFVO1lBQUNSO1NBQUs7SUFDbEI7SUFDQUYsTUFBTU0sS0FBSyxDQUFDTCxNQUFNTTtJQUNsQixPQUFPUCxNQUFNVyxTQUFTLENBQUNWLE1BQU1NO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9pbmxpbmUtY29kZS5qcz8wNTQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5UZXh0fSBUZXh0XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLklubGluZUNvZGV9IElubGluZUNvZGVcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuLyoqXG4gKiBUdXJuIGFuIG1kYXN0IGBpbmxpbmVDb2RlYCBub2RlIGludG8gaGFzdC5cbiAqXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXG4gKiBAcGFyYW0ge0lubGluZUNvZGV9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbmxpbmVDb2RlKHN0YXRlLCBub2RlKSB7XG4gIC8qKiBAdHlwZSB7VGV4dH0gKi9cbiAgY29uc3QgdGV4dCA9IHt0eXBlOiAndGV4dCcsIHZhbHVlOiBub2RlLnZhbHVlLnJlcGxhY2UoL1xccj9cXG58XFxyL2csICcgJyl9XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHRleHQpXG5cbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgdHlwZTogJ2VsZW1lbnQnLFxuICAgIHRhZ05hbWU6ICdjb2RlJyxcbiAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICBjaGlsZHJlbjogW3RleHRdXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJpbmxpbmVDb2RlIiwic3RhdGUiLCJub2RlIiwidGV4dCIsInR5cGUiLCJ2YWx1ZSIsInJlcGxhY2UiLCJwYXRjaCIsInJlc3VsdCIsInRhZ05hbWUiLCJwcm9wZXJ0aWVzIiwiY2hpbGRyZW4iLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js":
/*!************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   linkReference: () => (/* binding */ linkReference)\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"(ssr)/./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/* harmony import */ var _revert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../revert.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/revert.js\");\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */ \n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */ function linkReference(state, node) {\n    const def = state.definition(node.identifier);\n    if (!def) {\n        return (0,_revert_js__WEBPACK_IMPORTED_MODULE_0__.revert)(state, node);\n    }\n    /** @type {Properties} */ const properties = {\n        href: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_1__.normalizeUri)(def.url || \"\")\n    };\n    if (def.title !== null && def.title !== undefined) {\n        properties.title = def.title;\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"a\",\n        properties,\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saW5rLXJlZmVyZW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FFdUQ7QUFDckI7QUFFbkM7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0UsY0FBY0MsS0FBSyxFQUFFQyxJQUFJO0lBQ3ZDLE1BQU1DLE1BQU1GLE1BQU1HLFVBQVUsQ0FBQ0YsS0FBS0csVUFBVTtJQUU1QyxJQUFJLENBQUNGLEtBQUs7UUFDUixPQUFPSixrREFBTUEsQ0FBQ0UsT0FBT0M7SUFDdkI7SUFFQSx1QkFBdUIsR0FDdkIsTUFBTUksYUFBYTtRQUFDQyxNQUFNVCx5RUFBWUEsQ0FBQ0ssSUFBSUssR0FBRyxJQUFJO0lBQUc7SUFFckQsSUFBSUwsSUFBSU0sS0FBSyxLQUFLLFFBQVFOLElBQUlNLEtBQUssS0FBS0MsV0FBVztRQUNqREosV0FBV0csS0FBSyxHQUFHTixJQUFJTSxLQUFLO0lBQzlCO0lBRUEsb0JBQW9CLEdBQ3BCLE1BQU1FLFNBQVM7UUFDYkMsTUFBTTtRQUNOQyxTQUFTO1FBQ1RQO1FBQ0FRLFVBQVViLE1BQU1jLEdBQUcsQ0FBQ2I7SUFDdEI7SUFDQUQsTUFBTWUsS0FBSyxDQUFDZCxNQUFNUztJQUNsQixPQUFPVixNQUFNZ0IsU0FBUyxDQUFDZixNQUFNUztBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tYWktdGVtcGxhdGUtcHJvLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvbGluay1yZWZlcmVuY2UuanM/OTlhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudENvbnRlbnR9IEVsZW1lbnRDb250ZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUHJvcGVydGllc30gUHJvcGVydGllc1xuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5MaW5rUmVmZXJlbmNlfSBMaW5rUmVmZXJlbmNlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7bm9ybWFsaXplVXJpfSBmcm9tICdtaWNyb21hcmstdXRpbC1zYW5pdGl6ZS11cmknXG5pbXBvcnQge3JldmVydH0gZnJvbSAnLi4vcmV2ZXJ0LmpzJ1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGxpbmtSZWZlcmVuY2VgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7TGlua1JlZmVyZW5jZX0gbm9kZVxuICogICBtZGFzdCBub2RlLlxuICogQHJldHVybnMge0VsZW1lbnRDb250ZW50IHwgQXJyYXk8RWxlbWVudENvbnRlbnQ+fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsaW5rUmVmZXJlbmNlKHN0YXRlLCBub2RlKSB7XG4gIGNvbnN0IGRlZiA9IHN0YXRlLmRlZmluaXRpb24obm9kZS5pZGVudGlmaWVyKVxuXG4gIGlmICghZGVmKSB7XG4gICAgcmV0dXJuIHJldmVydChzdGF0ZSwgbm9kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7UHJvcGVydGllc30gKi9cbiAgY29uc3QgcHJvcGVydGllcyA9IHtocmVmOiBub3JtYWxpemVVcmkoZGVmLnVybCB8fCAnJyl9XG5cbiAgaWYgKGRlZi50aXRsZSAhPT0gbnVsbCAmJiBkZWYudGl0bGUgIT09IHVuZGVmaW5lZCkge1xuICAgIHByb3BlcnRpZXMudGl0bGUgPSBkZWYudGl0bGVcbiAgfVxuXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICB0YWdOYW1lOiAnYScsXG4gICAgcHJvcGVydGllcyxcbiAgICBjaGlsZHJlbjogc3RhdGUuYWxsKG5vZGUpXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJub3JtYWxpemVVcmkiLCJyZXZlcnQiLCJsaW5rUmVmZXJlbmNlIiwic3RhdGUiLCJub2RlIiwiZGVmIiwiZGVmaW5pdGlvbiIsImlkZW50aWZpZXIiLCJwcm9wZXJ0aWVzIiwiaHJlZiIsInVybCIsInRpdGxlIiwidW5kZWZpbmVkIiwicmVzdWx0IiwidHlwZSIsInRhZ05hbWUiLCJjaGlsZHJlbiIsImFsbCIsInBhdGNoIiwiYXBwbHlEYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/link.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/link.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   link: () => (/* binding */ link)\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"(ssr)/./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */ \n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function link(state, node) {\n    /** @type {Properties} */ const properties = {\n        href: (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.normalizeUri)(node.url)\n    };\n    if (node.title !== null && node.title !== undefined) {\n        properties.title = node.title;\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"a\",\n        properties,\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saW5rLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFdUQ7QUFFeEQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0MsS0FBS0MsS0FBSyxFQUFFQyxJQUFJO0lBQzlCLHVCQUF1QixHQUN2QixNQUFNQyxhQUFhO1FBQUNDLE1BQU1MLHlFQUFZQSxDQUFDRyxLQUFLRyxHQUFHO0lBQUM7SUFFaEQsSUFBSUgsS0FBS0ksS0FBSyxLQUFLLFFBQVFKLEtBQUtJLEtBQUssS0FBS0MsV0FBVztRQUNuREosV0FBV0csS0FBSyxHQUFHSixLQUFLSSxLQUFLO0lBQy9CO0lBRUEsb0JBQW9CLEdBQ3BCLE1BQU1FLFNBQVM7UUFDYkMsTUFBTTtRQUNOQyxTQUFTO1FBQ1RQO1FBQ0FRLFVBQVVWLE1BQU1XLEdBQUcsQ0FBQ1Y7SUFDdEI7SUFDQUQsTUFBTVksS0FBSyxDQUFDWCxNQUFNTTtJQUNsQixPQUFPUCxNQUFNYSxTQUFTLENBQUNaLE1BQU1NO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saW5rLmpzP2Q1YTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTGlua30gTGlua1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG5pbXBvcnQge25vcm1hbGl6ZVVyaX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtc2FuaXRpemUtdXJpJ1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGxpbmtgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7TGlua30gbm9kZVxuICogICBtZGFzdCBub2RlLlxuICogQHJldHVybnMge0VsZW1lbnR9XG4gKiAgIGhhc3Qgbm9kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpbmsoc3RhdGUsIG5vZGUpIHtcbiAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xuICBjb25zdCBwcm9wZXJ0aWVzID0ge2hyZWY6IG5vcm1hbGl6ZVVyaShub2RlLnVybCl9XG5cbiAgaWYgKG5vZGUudGl0bGUgIT09IG51bGwgJiYgbm9kZS50aXRsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcHJvcGVydGllcy50aXRsZSA9IG5vZGUudGl0bGVcbiAgfVxuXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICB0YWdOYW1lOiAnYScsXG4gICAgcHJvcGVydGllcyxcbiAgICBjaGlsZHJlbjogc3RhdGUuYWxsKG5vZGUpXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJub3JtYWxpemVVcmkiLCJsaW5rIiwic3RhdGUiLCJub2RlIiwicHJvcGVydGllcyIsImhyZWYiLCJ1cmwiLCJ0aXRsZSIsInVuZGVmaW5lZCIsInJlc3VsdCIsInR5cGUiLCJ0YWdOYW1lIiwiY2hpbGRyZW4iLCJhbGwiLCJwYXRjaCIsImFwcGx5RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/link.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/list-item.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   listItem: () => (/* binding */ listItem)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */ /**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */ /**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */ function listItem(state, node, parent) {\n    const results = state.all(node);\n    const loose = parent ? listLoose(parent) : listItemLoose(node);\n    /** @type {Properties} */ const properties = {};\n    /** @type {Array<ElementContent>} */ const children = [];\n    if (typeof node.checked === \"boolean\") {\n        const head = results[0];\n        /** @type {Element} */ let paragraph;\n        if (head && head.type === \"element\" && head.tagName === \"p\") {\n            paragraph = head;\n        } else {\n            paragraph = {\n                type: \"element\",\n                tagName: \"p\",\n                properties: {},\n                children: []\n            };\n            results.unshift(paragraph);\n        }\n        if (paragraph.children.length > 0) {\n            paragraph.children.unshift({\n                type: \"text\",\n                value: \" \"\n            });\n        }\n        paragraph.children.unshift({\n            type: \"element\",\n            tagName: \"input\",\n            properties: {\n                type: \"checkbox\",\n                checked: node.checked,\n                disabled: true\n            },\n            children: []\n        });\n        // According to github-markdown-css, this class hides bullet.\n        // See: <https://github.com/sindresorhus/github-markdown-css>.\n        properties.className = [\n            \"task-list-item\"\n        ];\n    }\n    let index = -1;\n    while(++index < results.length){\n        const child = results[index];\n        // Add eols before nodes, except if this is a loose, first paragraph.\n        if (loose || index !== 0 || child.type !== \"element\" || child.tagName !== \"p\") {\n            children.push({\n                type: \"text\",\n                value: \"\\n\"\n            });\n        }\n        if (child.type === \"element\" && child.tagName === \"p\" && !loose) {\n            children.push(...child.children);\n        } else {\n            children.push(child);\n        }\n    }\n    const tail = results[results.length - 1];\n    // Add a final eol.\n    if (tail && (loose || tail.type !== \"element\" || tail.tagName !== \"p\")) {\n        children.push({\n            type: \"text\",\n            value: \"\\n\"\n        });\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"li\",\n        properties,\n        children\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n/**\n * @param {Parents} node\n * @return {Boolean}\n */ function listLoose(node) {\n    let loose = false;\n    if (node.type === \"list\") {\n        loose = node.spread || false;\n        const children = node.children;\n        let index = -1;\n        while(!loose && ++index < children.length){\n            loose = listItemLoose(children[index]);\n        }\n    }\n    return loose;\n}\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */ function listItemLoose(node) {\n    const spread = node.spread;\n    return spread === undefined || spread === null ? node.children.length > 1 : spread;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saXN0LWl0ZW0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUVEOzs7Q0FHQyxHQUVEOzs7Ozs7Ozs7OztDQVdDLEdBQ00sU0FBU0EsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsTUFBTUMsVUFBVUgsTUFBTUksR0FBRyxDQUFDSDtJQUMxQixNQUFNSSxRQUFRSCxTQUFTSSxVQUFVSixVQUFVSyxjQUFjTjtJQUN6RCx1QkFBdUIsR0FDdkIsTUFBTU8sYUFBYSxDQUFDO0lBQ3BCLGtDQUFrQyxHQUNsQyxNQUFNQyxXQUFXLEVBQUU7SUFFbkIsSUFBSSxPQUFPUixLQUFLUyxPQUFPLEtBQUssV0FBVztRQUNyQyxNQUFNQyxPQUFPUixPQUFPLENBQUMsRUFBRTtRQUN2QixvQkFBb0IsR0FDcEIsSUFBSVM7UUFFSixJQUFJRCxRQUFRQSxLQUFLRSxJQUFJLEtBQUssYUFBYUYsS0FBS0csT0FBTyxLQUFLLEtBQUs7WUFDM0RGLFlBQVlEO1FBQ2QsT0FBTztZQUNMQyxZQUFZO2dCQUFDQyxNQUFNO2dCQUFXQyxTQUFTO2dCQUFLTixZQUFZLENBQUM7Z0JBQUdDLFVBQVUsRUFBRTtZQUFBO1lBQ3hFTixRQUFRWSxPQUFPLENBQUNIO1FBQ2xCO1FBRUEsSUFBSUEsVUFBVUgsUUFBUSxDQUFDTyxNQUFNLEdBQUcsR0FBRztZQUNqQ0osVUFBVUgsUUFBUSxDQUFDTSxPQUFPLENBQUM7Z0JBQUNGLE1BQU07Z0JBQVFJLE9BQU87WUFBRztRQUN0RDtRQUVBTCxVQUFVSCxRQUFRLENBQUNNLE9BQU8sQ0FBQztZQUN6QkYsTUFBTTtZQUNOQyxTQUFTO1lBQ1ROLFlBQVk7Z0JBQUNLLE1BQU07Z0JBQVlILFNBQVNULEtBQUtTLE9BQU87Z0JBQUVRLFVBQVU7WUFBSTtZQUNwRVQsVUFBVSxFQUFFO1FBQ2Q7UUFFQSw2REFBNkQ7UUFDN0QsOERBQThEO1FBQzlERCxXQUFXVyxTQUFTLEdBQUc7WUFBQztTQUFpQjtJQUMzQztJQUVBLElBQUlDLFFBQVEsQ0FBQztJQUViLE1BQU8sRUFBRUEsUUFBUWpCLFFBQVFhLE1BQU0sQ0FBRTtRQUMvQixNQUFNSyxRQUFRbEIsT0FBTyxDQUFDaUIsTUFBTTtRQUU1QixxRUFBcUU7UUFDckUsSUFDRWYsU0FDQWUsVUFBVSxLQUNWQyxNQUFNUixJQUFJLEtBQUssYUFDZlEsTUFBTVAsT0FBTyxLQUFLLEtBQ2xCO1lBQ0FMLFNBQVNhLElBQUksQ0FBQztnQkFBQ1QsTUFBTTtnQkFBUUksT0FBTztZQUFJO1FBQzFDO1FBRUEsSUFBSUksTUFBTVIsSUFBSSxLQUFLLGFBQWFRLE1BQU1QLE9BQU8sS0FBSyxPQUFPLENBQUNULE9BQU87WUFDL0RJLFNBQVNhLElBQUksSUFBSUQsTUFBTVosUUFBUTtRQUNqQyxPQUFPO1lBQ0xBLFNBQVNhLElBQUksQ0FBQ0Q7UUFDaEI7SUFDRjtJQUVBLE1BQU1FLE9BQU9wQixPQUFPLENBQUNBLFFBQVFhLE1BQU0sR0FBRyxFQUFFO0lBRXhDLG1CQUFtQjtJQUNuQixJQUFJTyxRQUFTbEIsQ0FBQUEsU0FBU2tCLEtBQUtWLElBQUksS0FBSyxhQUFhVSxLQUFLVCxPQUFPLEtBQUssR0FBRSxHQUFJO1FBQ3RFTCxTQUFTYSxJQUFJLENBQUM7WUFBQ1QsTUFBTTtZQUFRSSxPQUFPO1FBQUk7SUFDMUM7SUFFQSxvQkFBb0IsR0FDcEIsTUFBTU8sU0FBUztRQUFDWCxNQUFNO1FBQVdDLFNBQVM7UUFBTU47UUFBWUM7SUFBUTtJQUNwRVQsTUFBTXlCLEtBQUssQ0FBQ3hCLE1BQU11QjtJQUNsQixPQUFPeEIsTUFBTTBCLFNBQVMsQ0FBQ3pCLE1BQU11QjtBQUMvQjtBQUVBOzs7Q0FHQyxHQUNELFNBQVNsQixVQUFVTCxJQUFJO0lBQ3JCLElBQUlJLFFBQVE7SUFDWixJQUFJSixLQUFLWSxJQUFJLEtBQUssUUFBUTtRQUN4QlIsUUFBUUosS0FBSzBCLE1BQU0sSUFBSTtRQUN2QixNQUFNbEIsV0FBV1IsS0FBS1EsUUFBUTtRQUM5QixJQUFJVyxRQUFRLENBQUM7UUFFYixNQUFPLENBQUNmLFNBQVMsRUFBRWUsUUFBUVgsU0FBU08sTUFBTSxDQUFFO1lBQzFDWCxRQUFRRSxjQUFjRSxRQUFRLENBQUNXLE1BQU07UUFDdkM7SUFDRjtJQUVBLE9BQU9mO0FBQ1Q7QUFFQTs7O0NBR0MsR0FDRCxTQUFTRSxjQUFjTixJQUFJO0lBQ3pCLE1BQU0wQixTQUFTMUIsS0FBSzBCLE1BQU07SUFFMUIsT0FBT0EsV0FBV0MsYUFBYUQsV0FBVyxPQUN0QzFCLEtBQUtRLFFBQVEsQ0FBQ08sTUFBTSxHQUFHLElBQ3ZCVztBQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saXN0LWl0ZW0uanM/NmQzNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudENvbnRlbnR9IEVsZW1lbnRDb250ZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUHJvcGVydGllc30gUHJvcGVydGllc1xuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Db250ZW50fSBDb250ZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkxpc3RJdGVtfSBMaXN0SXRlbVxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5QYXJlbnR9IFBhcmVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBSb290XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge1Jvb3QgfCBDb250ZW50fSBOb2Rlc1xuICogQHR5cGVkZWYge0V4dHJhY3Q8Tm9kZXMsIFBhcmVudD59IFBhcmVudHNcbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGxpc3RJdGVtYCBub2RlIGludG8gaGFzdC5cbiAqXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXG4gKiBAcGFyYW0ge0xpc3RJdGVtfSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcGFyYW0ge1BhcmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBwYXJlbnRcbiAqICAgUGFyZW50IG9mIGBub2RlYC5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsaXN0SXRlbShzdGF0ZSwgbm9kZSwgcGFyZW50KSB7XG4gIGNvbnN0IHJlc3VsdHMgPSBzdGF0ZS5hbGwobm9kZSlcbiAgY29uc3QgbG9vc2UgPSBwYXJlbnQgPyBsaXN0TG9vc2UocGFyZW50KSA6IGxpc3RJdGVtTG9vc2Uobm9kZSlcbiAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xuICBjb25zdCBwcm9wZXJ0aWVzID0ge31cbiAgLyoqIEB0eXBlIHtBcnJheTxFbGVtZW50Q29udGVudD59ICovXG4gIGNvbnN0IGNoaWxkcmVuID0gW11cblxuICBpZiAodHlwZW9mIG5vZGUuY2hlY2tlZCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgY29uc3QgaGVhZCA9IHJlc3VsdHNbMF1cbiAgICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gICAgbGV0IHBhcmFncmFwaFxuXG4gICAgaWYgKGhlYWQgJiYgaGVhZC50eXBlID09PSAnZWxlbWVudCcgJiYgaGVhZC50YWdOYW1lID09PSAncCcpIHtcbiAgICAgIHBhcmFncmFwaCA9IGhlYWRcbiAgICB9IGVsc2Uge1xuICAgICAgcGFyYWdyYXBoID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZTogJ3AnLCBwcm9wZXJ0aWVzOiB7fSwgY2hpbGRyZW46IFtdfVxuICAgICAgcmVzdWx0cy51bnNoaWZ0KHBhcmFncmFwaClcbiAgICB9XG5cbiAgICBpZiAocGFyYWdyYXBoLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgIHBhcmFncmFwaC5jaGlsZHJlbi51bnNoaWZ0KHt0eXBlOiAndGV4dCcsIHZhbHVlOiAnICd9KVxuICAgIH1cblxuICAgIHBhcmFncmFwaC5jaGlsZHJlbi51bnNoaWZ0KHtcbiAgICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICAgIHRhZ05hbWU6ICdpbnB1dCcsXG4gICAgICBwcm9wZXJ0aWVzOiB7dHlwZTogJ2NoZWNrYm94JywgY2hlY2tlZDogbm9kZS5jaGVja2VkLCBkaXNhYmxlZDogdHJ1ZX0sXG4gICAgICBjaGlsZHJlbjogW11cbiAgICB9KVxuXG4gICAgLy8gQWNjb3JkaW5nIHRvIGdpdGh1Yi1tYXJrZG93bi1jc3MsIHRoaXMgY2xhc3MgaGlkZXMgYnVsbGV0LlxuICAgIC8vIFNlZTogPGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvZ2l0aHViLW1hcmtkb3duLWNzcz4uXG4gICAgcHJvcGVydGllcy5jbGFzc05hbWUgPSBbJ3Rhc2stbGlzdC1pdGVtJ11cbiAgfVxuXG4gIGxldCBpbmRleCA9IC0xXG5cbiAgd2hpbGUgKCsraW5kZXggPCByZXN1bHRzLmxlbmd0aCkge1xuICAgIGNvbnN0IGNoaWxkID0gcmVzdWx0c1tpbmRleF1cblxuICAgIC8vIEFkZCBlb2xzIGJlZm9yZSBub2RlcywgZXhjZXB0IGlmIHRoaXMgaXMgYSBsb29zZSwgZmlyc3QgcGFyYWdyYXBoLlxuICAgIGlmIChcbiAgICAgIGxvb3NlIHx8XG4gICAgICBpbmRleCAhPT0gMCB8fFxuICAgICAgY2hpbGQudHlwZSAhPT0gJ2VsZW1lbnQnIHx8XG4gICAgICBjaGlsZC50YWdOYW1lICE9PSAncCdcbiAgICApIHtcbiAgICAgIGNoaWxkcmVuLnB1c2goe3R5cGU6ICd0ZXh0JywgdmFsdWU6ICdcXG4nfSlcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQudHlwZSA9PT0gJ2VsZW1lbnQnICYmIGNoaWxkLnRhZ05hbWUgPT09ICdwJyAmJiAhbG9vc2UpIHtcbiAgICAgIGNoaWxkcmVuLnB1c2goLi4uY2hpbGQuY2hpbGRyZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIGNoaWxkcmVuLnB1c2goY2hpbGQpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgdGFpbCA9IHJlc3VsdHNbcmVzdWx0cy5sZW5ndGggLSAxXVxuXG4gIC8vIEFkZCBhIGZpbmFsIGVvbC5cbiAgaWYgKHRhaWwgJiYgKGxvb3NlIHx8IHRhaWwudHlwZSAhPT0gJ2VsZW1lbnQnIHx8IHRhaWwudGFnTmFtZSAhPT0gJ3AnKSkge1xuICAgIGNoaWxkcmVuLnB1c2goe3R5cGU6ICd0ZXh0JywgdmFsdWU6ICdcXG4nfSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge3R5cGU6ICdlbGVtZW50JywgdGFnTmFtZTogJ2xpJywgcHJvcGVydGllcywgY2hpbGRyZW59XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXG59XG5cbi8qKlxuICogQHBhcmFtIHtQYXJlbnRzfSBub2RlXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBsaXN0TG9vc2Uobm9kZSkge1xuICBsZXQgbG9vc2UgPSBmYWxzZVxuICBpZiAobm9kZS50eXBlID09PSAnbGlzdCcpIHtcbiAgICBsb29zZSA9IG5vZGUuc3ByZWFkIHx8IGZhbHNlXG4gICAgY29uc3QgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuXG4gICAgbGV0IGluZGV4ID0gLTFcblxuICAgIHdoaWxlICghbG9vc2UgJiYgKytpbmRleCA8IGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgbG9vc2UgPSBsaXN0SXRlbUxvb3NlKGNoaWxkcmVuW2luZGV4XSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9vc2Vcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0xpc3RJdGVtfSBub2RlXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBsaXN0SXRlbUxvb3NlKG5vZGUpIHtcbiAgY29uc3Qgc3ByZWFkID0gbm9kZS5zcHJlYWRcblxuICByZXR1cm4gc3ByZWFkID09PSB1bmRlZmluZWQgfHwgc3ByZWFkID09PSBudWxsXG4gICAgPyBub2RlLmNoaWxkcmVuLmxlbmd0aCA+IDFcbiAgICA6IHNwcmVhZFxufVxuIl0sIm5hbWVzIjpbImxpc3RJdGVtIiwic3RhdGUiLCJub2RlIiwicGFyZW50IiwicmVzdWx0cyIsImFsbCIsImxvb3NlIiwibGlzdExvb3NlIiwibGlzdEl0ZW1Mb29zZSIsInByb3BlcnRpZXMiLCJjaGlsZHJlbiIsImNoZWNrZWQiLCJoZWFkIiwicGFyYWdyYXBoIiwidHlwZSIsInRhZ05hbWUiLCJ1bnNoaWZ0IiwibGVuZ3RoIiwidmFsdWUiLCJkaXNhYmxlZCIsImNsYXNzTmFtZSIsImluZGV4IiwiY2hpbGQiLCJwdXNoIiwidGFpbCIsInJlc3VsdCIsInBhdGNoIiwiYXBwbHlEYXRhIiwic3ByZWFkIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/list.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/list.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   list: () => (/* binding */ list)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function list(state, node) {\n    /** @type {Properties} */ const properties = {};\n    const results = state.all(node);\n    let index = -1;\n    if (typeof node.start === \"number\" && node.start !== 1) {\n        properties.start = node.start;\n    }\n    // Like GitHub, add a class for custom styling.\n    while(++index < results.length){\n        const child = results[index];\n        if (child.type === \"element\" && child.tagName === \"li\" && child.properties && Array.isArray(child.properties.className) && child.properties.className.includes(\"task-list-item\")) {\n            properties.className = [\n                \"contains-task-list\"\n            ];\n            break;\n        }\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: node.ordered ? \"ol\" : \"ul\",\n        properties,\n        children: state.wrap(results, true)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNBLEtBQUtDLEtBQUssRUFBRUMsSUFBSTtJQUM5Qix1QkFBdUIsR0FDdkIsTUFBTUMsYUFBYSxDQUFDO0lBQ3BCLE1BQU1DLFVBQVVILE1BQU1JLEdBQUcsQ0FBQ0g7SUFDMUIsSUFBSUksUUFBUSxDQUFDO0lBRWIsSUFBSSxPQUFPSixLQUFLSyxLQUFLLEtBQUssWUFBWUwsS0FBS0ssS0FBSyxLQUFLLEdBQUc7UUFDdERKLFdBQVdJLEtBQUssR0FBR0wsS0FBS0ssS0FBSztJQUMvQjtJQUVBLCtDQUErQztJQUMvQyxNQUFPLEVBQUVELFFBQVFGLFFBQVFJLE1BQU0sQ0FBRTtRQUMvQixNQUFNQyxRQUFRTCxPQUFPLENBQUNFLE1BQU07UUFFNUIsSUFDRUcsTUFBTUMsSUFBSSxLQUFLLGFBQ2ZELE1BQU1FLE9BQU8sS0FBSyxRQUNsQkYsTUFBTU4sVUFBVSxJQUNoQlMsTUFBTUMsT0FBTyxDQUFDSixNQUFNTixVQUFVLENBQUNXLFNBQVMsS0FDeENMLE1BQU1OLFVBQVUsQ0FBQ1csU0FBUyxDQUFDQyxRQUFRLENBQUMsbUJBQ3BDO1lBQ0FaLFdBQVdXLFNBQVMsR0FBRztnQkFBQzthQUFxQjtZQUM3QztRQUNGO0lBQ0Y7SUFFQSxvQkFBb0IsR0FDcEIsTUFBTUUsU0FBUztRQUNiTixNQUFNO1FBQ05DLFNBQVNULEtBQUtlLE9BQU8sR0FBRyxPQUFPO1FBQy9CZDtRQUNBZSxVQUFVakIsTUFBTWtCLElBQUksQ0FBQ2YsU0FBUztJQUNoQztJQUNBSCxNQUFNbUIsS0FBSyxDQUFDbEIsTUFBTWM7SUFDbEIsT0FBT2YsTUFBTW9CLFNBQVMsQ0FBQ25CLE1BQU1jO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9saXN0LmpzPzM3MTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTGlzdH0gTGlzdFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYGxpc3RgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7TGlzdH0gbm9kZVxuICogICBtZGFzdCBub2RlLlxuICogQHJldHVybnMge0VsZW1lbnR9XG4gKiAgIGhhc3Qgbm9kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpc3Qoc3RhdGUsIG5vZGUpIHtcbiAgLyoqIEB0eXBlIHtQcm9wZXJ0aWVzfSAqL1xuICBjb25zdCBwcm9wZXJ0aWVzID0ge31cbiAgY29uc3QgcmVzdWx0cyA9IHN0YXRlLmFsbChub2RlKVxuICBsZXQgaW5kZXggPSAtMVxuXG4gIGlmICh0eXBlb2Ygbm9kZS5zdGFydCA9PT0gJ251bWJlcicgJiYgbm9kZS5zdGFydCAhPT0gMSkge1xuICAgIHByb3BlcnRpZXMuc3RhcnQgPSBub2RlLnN0YXJ0XG4gIH1cblxuICAvLyBMaWtlIEdpdEh1YiwgYWRkIGEgY2xhc3MgZm9yIGN1c3RvbSBzdHlsaW5nLlxuICB3aGlsZSAoKytpbmRleCA8IHJlc3VsdHMubGVuZ3RoKSB7XG4gICAgY29uc3QgY2hpbGQgPSByZXN1bHRzW2luZGV4XVxuXG4gICAgaWYgKFxuICAgICAgY2hpbGQudHlwZSA9PT0gJ2VsZW1lbnQnICYmXG4gICAgICBjaGlsZC50YWdOYW1lID09PSAnbGknICYmXG4gICAgICBjaGlsZC5wcm9wZXJ0aWVzICYmXG4gICAgICBBcnJheS5pc0FycmF5KGNoaWxkLnByb3BlcnRpZXMuY2xhc3NOYW1lKSAmJlxuICAgICAgY2hpbGQucHJvcGVydGllcy5jbGFzc05hbWUuaW5jbHVkZXMoJ3Rhc2stbGlzdC1pdGVtJylcbiAgICApIHtcbiAgICAgIHByb3BlcnRpZXMuY2xhc3NOYW1lID0gWydjb250YWlucy10YXNrLWxpc3QnXVxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgdGFnTmFtZTogbm9kZS5vcmRlcmVkID8gJ29sJyA6ICd1bCcsXG4gICAgcHJvcGVydGllcyxcbiAgICBjaGlsZHJlbjogc3RhdGUud3JhcChyZXN1bHRzLCB0cnVlKVxuICB9XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXG59XG4iXSwibmFtZXMiOlsibGlzdCIsInN0YXRlIiwibm9kZSIsInByb3BlcnRpZXMiLCJyZXN1bHRzIiwiYWxsIiwiaW5kZXgiLCJzdGFydCIsImxlbmd0aCIsImNoaWxkIiwidHlwZSIsInRhZ05hbWUiLCJBcnJheSIsImlzQXJyYXkiLCJjbGFzc05hbWUiLCJpbmNsdWRlcyIsInJlc3VsdCIsIm9yZGVyZWQiLCJjaGlsZHJlbiIsIndyYXAiLCJwYXRjaCIsImFwcGx5RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/list.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paragraph: () => (/* binding */ paragraph)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function paragraph(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"p\",\n        properties: {},\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9wYXJhZ3JhcGguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FFRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQSxVQUFVQyxLQUFLLEVBQUVDLElBQUk7SUFDbkMsb0JBQW9CLEdBQ3BCLE1BQU1DLFNBQVM7UUFDYkMsTUFBTTtRQUNOQyxTQUFTO1FBQ1RDLFlBQVksQ0FBQztRQUNiQyxVQUFVTixNQUFNTyxHQUFHLENBQUNOO0lBQ3RCO0lBQ0FELE1BQU1RLEtBQUssQ0FBQ1AsTUFBTUM7SUFDbEIsT0FBT0YsTUFBTVMsU0FBUyxDQUFDUixNQUFNQztBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tYWktdGVtcGxhdGUtcHJvLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvcGFyYWdyYXBoLmpzP2RlMTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5QYXJhZ3JhcGh9IFBhcmFncmFwaFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYHBhcmFncmFwaGAgbm9kZSBpbnRvIGhhc3QuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtQYXJhZ3JhcGh9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJhZ3JhcGgoc3RhdGUsIG5vZGUpIHtcbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgdHlwZTogJ2VsZW1lbnQnLFxuICAgIHRhZ05hbWU6ICdwJyxcbiAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICBjaGlsZHJlbjogc3RhdGUuYWxsKG5vZGUpXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJwYXJhZ3JhcGgiLCJzdGF0ZSIsIm5vZGUiLCJyZXN1bHQiLCJ0eXBlIiwidGFnTmFtZSIsInByb3BlcnRpZXMiLCJjaGlsZHJlbiIsImFsbCIsInBhdGNoIiwiYXBwbHlEYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/root.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/root.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   root: () => (/* binding */ root)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */ function root(state, node) {\n    /** @type {HastRoot} */ const result = {\n        type: \"root\",\n        children: state.wrap(state.all(node))\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9yb290LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNBLEtBQUtDLEtBQUssRUFBRUMsSUFBSTtJQUM5QixxQkFBcUIsR0FDckIsTUFBTUMsU0FBUztRQUFDQyxNQUFNO1FBQVFDLFVBQVVKLE1BQU1LLElBQUksQ0FBQ0wsTUFBTU0sR0FBRyxDQUFDTDtJQUFNO0lBQ25FRCxNQUFNTyxLQUFLLENBQUNOLE1BQU1DO0lBQ2xCLE9BQU9GLE1BQU1RLFNBQVMsQ0FBQ1AsTUFBTUM7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLWFpLXRlbXBsYXRlLXByby8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL3Jvb3QuanM/MDYyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Sb290fSBIYXN0Um9vdFxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEhhc3RFbGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlJvb3R9IE1kYXN0Um9vdFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYHJvb3RgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7TWRhc3RSb290fSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcmV0dXJucyB7SGFzdFJvb3QgfCBIYXN0RWxlbWVudH1cbiAqICAgaGFzdCBub2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcm9vdChzdGF0ZSwgbm9kZSkge1xuICAvKiogQHR5cGUge0hhc3RSb290fSAqL1xuICBjb25zdCByZXN1bHQgPSB7dHlwZTogJ3Jvb3QnLCBjaGlsZHJlbjogc3RhdGUud3JhcChzdGF0ZS5hbGwobm9kZSkpfVxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxufVxuIl0sIm5hbWVzIjpbInJvb3QiLCJzdGF0ZSIsIm5vZGUiLCJyZXN1bHQiLCJ0eXBlIiwiY2hpbGRyZW4iLCJ3cmFwIiwiYWxsIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/root.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/strong.js":
/*!****************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/strong.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   strong: () => (/* binding */ strong)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function strong(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"strong\",\n        properties: {},\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy9zdHJvbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FFRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQSxPQUFPQyxLQUFLLEVBQUVDLElBQUk7SUFDaEMsb0JBQW9CLEdBQ3BCLE1BQU1DLFNBQVM7UUFDYkMsTUFBTTtRQUNOQyxTQUFTO1FBQ1RDLFlBQVksQ0FBQztRQUNiQyxVQUFVTixNQUFNTyxHQUFHLENBQUNOO0lBQ3RCO0lBQ0FELE1BQU1RLEtBQUssQ0FBQ1AsTUFBTUM7SUFDbEIsT0FBT0YsTUFBTVMsU0FBUyxDQUFDUixNQUFNQztBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tYWktdGVtcGxhdGUtcHJvLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvc3Ryb25nLmpzPzE0ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5TdHJvbmd9IFN0cm9uZ1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vc3RhdGUuanMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG4vKipcbiAqIFR1cm4gYW4gbWRhc3QgYHN0cm9uZ2Agbm9kZSBpbnRvIGhhc3QuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtTdHJvbmd9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJvbmcoc3RhdGUsIG5vZGUpIHtcbiAgLyoqIEB0eXBlIHtFbGVtZW50fSAqL1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgdHlwZTogJ2VsZW1lbnQnLFxuICAgIHRhZ05hbWU6ICdzdHJvbmcnLFxuICAgIHByb3BlcnRpZXM6IHt9LFxuICAgIGNoaWxkcmVuOiBzdGF0ZS5hbGwobm9kZSlcbiAgfVxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxufVxuIl0sIm5hbWVzIjpbInN0cm9uZyIsInN0YXRlIiwibm9kZSIsInJlc3VsdCIsInR5cGUiLCJ0YWdOYW1lIiwicHJvcGVydGllcyIsImNoaWxkcmVuIiwiYWxsIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/strong.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js":
/*!********************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tableCell: () => (/* binding */ tableCell)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function tableCell(state, node) {\n    // Note: this function is normally not called: see `table-row` for how rows\n    // and their cells are compiled.\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"td\",\n        properties: {},\n        children: state.all(node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90YWJsZS1jZWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0EsVUFBVUMsS0FBSyxFQUFFQyxJQUFJO0lBQ25DLDJFQUEyRTtJQUMzRSxnQ0FBZ0M7SUFDaEMsb0JBQW9CLEdBQ3BCLE1BQU1DLFNBQVM7UUFDYkMsTUFBTTtRQUNOQyxTQUFTO1FBQ1RDLFlBQVksQ0FBQztRQUNiQyxVQUFVTixNQUFNTyxHQUFHLENBQUNOO0lBQ3RCO0lBQ0FELE1BQU1RLEtBQUssQ0FBQ1AsTUFBTUM7SUFDbEIsT0FBT0YsTUFBTVMsU0FBUyxDQUFDUixNQUFNQztBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tYWktdGVtcGxhdGUtcHJvLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvdGFibGUtY2VsbC5qcz9kNzZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuVGFibGVDZWxsfSBUYWJsZUNlbGxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuLyoqXG4gKiBUdXJuIGFuIG1kYXN0IGB0YWJsZUNlbGxgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7VGFibGVDZWxsfSBub2RlXG4gKiAgIG1kYXN0IG5vZGUuXG4gKiBAcmV0dXJucyB7RWxlbWVudH1cbiAqICAgaGFzdCBub2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGFibGVDZWxsKHN0YXRlLCBub2RlKSB7XG4gIC8vIE5vdGU6IHRoaXMgZnVuY3Rpb24gaXMgbm9ybWFsbHkgbm90IGNhbGxlZDogc2VlIGB0YWJsZS1yb3dgIGZvciBob3cgcm93c1xuICAvLyBhbmQgdGhlaXIgY2VsbHMgYXJlIGNvbXBpbGVkLlxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgdGFnTmFtZTogJ3RkJywgLy8gQXNzdW1lIGJvZHkgY2VsbC5cbiAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICBjaGlsZHJlbjogc3RhdGUuYWxsKG5vZGUpXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJ0YWJsZUNlbGwiLCJzdGF0ZSIsIm5vZGUiLCJyZXN1bHQiLCJ0eXBlIiwidGFnTmFtZSIsInByb3BlcnRpZXMiLCJjaGlsZHJlbiIsImFsbCIsInBhdGNoIiwiYXBwbHlEYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/table-row.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tableRow: () => (/* binding */ tableRow)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */ /**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */ /**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */ function tableRow(state, node, parent) {\n    const siblings = parent ? parent.children : undefined;\n    // Generate a body row when without parent.\n    const rowIndex = siblings ? siblings.indexOf(node) : 1;\n    const tagName = rowIndex === 0 ? \"th\" : \"td\";\n    const align = parent && parent.type === \"table\" ? parent.align : undefined;\n    const length = align ? align.length : node.children.length;\n    let cellIndex = -1;\n    /** @type {Array<ElementContent>} */ const cells = [];\n    while(++cellIndex < length){\n        // Note: can also be undefined.\n        const cell = node.children[cellIndex];\n        /** @type {Properties} */ const properties = {};\n        const alignValue = align ? align[cellIndex] : undefined;\n        if (alignValue) {\n            properties.align = alignValue;\n        }\n        /** @type {Element} */ let result = {\n            type: \"element\",\n            tagName,\n            properties,\n            children: []\n        };\n        if (cell) {\n            result.children = state.all(cell);\n            state.patch(cell, result);\n            result = state.applyData(node, result);\n        }\n        cells.push(result);\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"tr\",\n        properties: {},\n        children: state.wrap(cells, true)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90YWJsZS1yb3cuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUVEOzs7Q0FHQyxHQUVEOzs7Ozs7Ozs7OztDQVdDLEdBQ00sU0FBU0EsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsTUFBTUMsV0FBV0QsU0FBU0EsT0FBT0UsUUFBUSxHQUFHQztJQUM1QywyQ0FBMkM7SUFDM0MsTUFBTUMsV0FBV0gsV0FBV0EsU0FBU0ksT0FBTyxDQUFDTixRQUFRO0lBQ3JELE1BQU1PLFVBQVVGLGFBQWEsSUFBSSxPQUFPO0lBQ3hDLE1BQU1HLFFBQVFQLFVBQVVBLE9BQU9RLElBQUksS0FBSyxVQUFVUixPQUFPTyxLQUFLLEdBQUdKO0lBQ2pFLE1BQU1NLFNBQVNGLFFBQVFBLE1BQU1FLE1BQU0sR0FBR1YsS0FBS0csUUFBUSxDQUFDTyxNQUFNO0lBQzFELElBQUlDLFlBQVksQ0FBQztJQUNqQixrQ0FBa0MsR0FDbEMsTUFBTUMsUUFBUSxFQUFFO0lBRWhCLE1BQU8sRUFBRUQsWUFBWUQsT0FBUTtRQUMzQiwrQkFBK0I7UUFDL0IsTUFBTUcsT0FBT2IsS0FBS0csUUFBUSxDQUFDUSxVQUFVO1FBQ3JDLHVCQUF1QixHQUN2QixNQUFNRyxhQUFhLENBQUM7UUFDcEIsTUFBTUMsYUFBYVAsUUFBUUEsS0FBSyxDQUFDRyxVQUFVLEdBQUdQO1FBRTlDLElBQUlXLFlBQVk7WUFDZEQsV0FBV04sS0FBSyxHQUFHTztRQUNyQjtRQUVBLG9CQUFvQixHQUNwQixJQUFJQyxTQUFTO1lBQUNQLE1BQU07WUFBV0Y7WUFBU087WUFBWVgsVUFBVSxFQUFFO1FBQUE7UUFFaEUsSUFBSVUsTUFBTTtZQUNSRyxPQUFPYixRQUFRLEdBQUdKLE1BQU1rQixHQUFHLENBQUNKO1lBQzVCZCxNQUFNbUIsS0FBSyxDQUFDTCxNQUFNRztZQUNsQkEsU0FBU2pCLE1BQU1vQixTQUFTLENBQUNuQixNQUFNZ0I7UUFDakM7UUFFQUosTUFBTVEsSUFBSSxDQUFDSjtJQUNiO0lBRUEsb0JBQW9CLEdBQ3BCLE1BQU1BLFNBQVM7UUFDYlAsTUFBTTtRQUNORixTQUFTO1FBQ1RPLFlBQVksQ0FBQztRQUNiWCxVQUFVSixNQUFNc0IsSUFBSSxDQUFDVCxPQUFPO0lBQzlCO0lBQ0FiLE1BQU1tQixLQUFLLENBQUNsQixNQUFNZ0I7SUFDbEIsT0FBT2pCLE1BQU1vQixTQUFTLENBQUNuQixNQUFNZ0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLWFpLXRlbXBsYXRlLXByby8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL3RhYmxlLXJvdy5qcz8wMzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudENvbnRlbnR9IEVsZW1lbnRDb250ZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkNvbnRlbnR9IENvbnRlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUGFyZW50fSBQYXJlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gUm9vdFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5UYWJsZVJvd30gVGFibGVSb3dcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7Um9vdCB8IENvbnRlbnR9IE5vZGVzXG4gKiBAdHlwZWRlZiB7RXh0cmFjdDxOb2RlcywgUGFyZW50Pn0gUGFyZW50c1xuICovXG5cbi8qKlxuICogVHVybiBhbiBtZGFzdCBgdGFibGVSb3dgIG5vZGUgaW50byBoYXN0LlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEluZm8gcGFzc2VkIGFyb3VuZC5cbiAqIEBwYXJhbSB7VGFibGVSb3d9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEBwYXJhbSB7UGFyZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IHBhcmVudFxuICogICBQYXJlbnQgb2YgYG5vZGVgLlxuICogQHJldHVybnMge0VsZW1lbnR9XG4gKiAgIGhhc3Qgbm9kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRhYmxlUm93KHN0YXRlLCBub2RlLCBwYXJlbnQpIHtcbiAgY29uc3Qgc2libGluZ3MgPSBwYXJlbnQgPyBwYXJlbnQuY2hpbGRyZW4gOiB1bmRlZmluZWRcbiAgLy8gR2VuZXJhdGUgYSBib2R5IHJvdyB3aGVuIHdpdGhvdXQgcGFyZW50LlxuICBjb25zdCByb3dJbmRleCA9IHNpYmxpbmdzID8gc2libGluZ3MuaW5kZXhPZihub2RlKSA6IDFcbiAgY29uc3QgdGFnTmFtZSA9IHJvd0luZGV4ID09PSAwID8gJ3RoJyA6ICd0ZCdcbiAgY29uc3QgYWxpZ24gPSBwYXJlbnQgJiYgcGFyZW50LnR5cGUgPT09ICd0YWJsZScgPyBwYXJlbnQuYWxpZ24gOiB1bmRlZmluZWRcbiAgY29uc3QgbGVuZ3RoID0gYWxpZ24gPyBhbGlnbi5sZW5ndGggOiBub2RlLmNoaWxkcmVuLmxlbmd0aFxuICBsZXQgY2VsbEluZGV4ID0gLTFcbiAgLyoqIEB0eXBlIHtBcnJheTxFbGVtZW50Q29udGVudD59ICovXG4gIGNvbnN0IGNlbGxzID0gW11cblxuICB3aGlsZSAoKytjZWxsSW5kZXggPCBsZW5ndGgpIHtcbiAgICAvLyBOb3RlOiBjYW4gYWxzbyBiZSB1bmRlZmluZWQuXG4gICAgY29uc3QgY2VsbCA9IG5vZGUuY2hpbGRyZW5bY2VsbEluZGV4XVxuICAgIC8qKiBAdHlwZSB7UHJvcGVydGllc30gKi9cbiAgICBjb25zdCBwcm9wZXJ0aWVzID0ge31cbiAgICBjb25zdCBhbGlnblZhbHVlID0gYWxpZ24gPyBhbGlnbltjZWxsSW5kZXhdIDogdW5kZWZpbmVkXG5cbiAgICBpZiAoYWxpZ25WYWx1ZSkge1xuICAgICAgcHJvcGVydGllcy5hbGlnbiA9IGFsaWduVmFsdWVcbiAgICB9XG5cbiAgICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gICAgbGV0IHJlc3VsdCA9IHt0eXBlOiAnZWxlbWVudCcsIHRhZ05hbWUsIHByb3BlcnRpZXMsIGNoaWxkcmVuOiBbXX1cblxuICAgIGlmIChjZWxsKSB7XG4gICAgICByZXN1bHQuY2hpbGRyZW4gPSBzdGF0ZS5hbGwoY2VsbClcbiAgICAgIHN0YXRlLnBhdGNoKGNlbGwsIHJlc3VsdClcbiAgICAgIHJlc3VsdCA9IHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXG4gICAgfVxuXG4gICAgY2VsbHMucHVzaChyZXN1bHQpXG4gIH1cblxuICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgdGFnTmFtZTogJ3RyJyxcbiAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICBjaGlsZHJlbjogc3RhdGUud3JhcChjZWxscywgdHJ1ZSlcbiAgfVxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxufVxuIl0sIm5hbWVzIjpbInRhYmxlUm93Iiwic3RhdGUiLCJub2RlIiwicGFyZW50Iiwic2libGluZ3MiLCJjaGlsZHJlbiIsInVuZGVmaW5lZCIsInJvd0luZGV4IiwiaW5kZXhPZiIsInRhZ05hbWUiLCJhbGlnbiIsInR5cGUiLCJsZW5ndGgiLCJjZWxsSW5kZXgiLCJjZWxscyIsImNlbGwiLCJwcm9wZXJ0aWVzIiwiYWxpZ25WYWx1ZSIsInJlc3VsdCIsImFsbCIsInBhdGNoIiwiYXBwbHlEYXRhIiwicHVzaCIsIndyYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table.js":
/*!***************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/table.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   table: () => (/* binding */ table)\n/* harmony export */ });\n/* harmony import */ var unist_util_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-position */ \"(ssr)/./node_modules/unist-util-position/lib/index.js\");\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */ \n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function table(state, node) {\n    const rows = state.all(node);\n    const firstRow = rows.shift();\n    /** @type {Array<Element>} */ const tableContent = [];\n    if (firstRow) {\n        /** @type {Element} */ const head = {\n            type: \"element\",\n            tagName: \"thead\",\n            properties: {},\n            children: state.wrap([\n                firstRow\n            ], true)\n        };\n        state.patch(node.children[0], head);\n        tableContent.push(head);\n    }\n    if (rows.length > 0) {\n        /** @type {Element} */ const body = {\n            type: \"element\",\n            tagName: \"tbody\",\n            properties: {},\n            children: state.wrap(rows, true)\n        };\n        const start = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_0__.pointStart)(node.children[1]);\n        const end = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_0__.pointEnd)(node.children[node.children.length - 1]);\n        if (start.line && end.line) body.position = {\n            start,\n            end\n        };\n        tableContent.push(body);\n    }\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"table\",\n        properties: {},\n        children: state.wrap(tableContent, true)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90YWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7O0NBSUMsR0FFdUQ7QUFFeEQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0UsTUFBTUMsS0FBSyxFQUFFQyxJQUFJO0lBQy9CLE1BQU1DLE9BQU9GLE1BQU1HLEdBQUcsQ0FBQ0Y7SUFDdkIsTUFBTUcsV0FBV0YsS0FBS0csS0FBSztJQUMzQiwyQkFBMkIsR0FDM0IsTUFBTUMsZUFBZSxFQUFFO0lBRXZCLElBQUlGLFVBQVU7UUFDWixvQkFBb0IsR0FDcEIsTUFBTUcsT0FBTztZQUNYQyxNQUFNO1lBQ05DLFNBQVM7WUFDVEMsWUFBWSxDQUFDO1lBQ2JDLFVBQVVYLE1BQU1ZLElBQUksQ0FBQztnQkFBQ1I7YUFBUyxFQUFFO1FBQ25DO1FBQ0FKLE1BQU1hLEtBQUssQ0FBQ1osS0FBS1UsUUFBUSxDQUFDLEVBQUUsRUFBRUo7UUFDOUJELGFBQWFRLElBQUksQ0FBQ1A7SUFDcEI7SUFFQSxJQUFJTCxLQUFLYSxNQUFNLEdBQUcsR0FBRztRQUNuQixvQkFBb0IsR0FDcEIsTUFBTUMsT0FBTztZQUNYUixNQUFNO1lBQ05DLFNBQVM7WUFDVEMsWUFBWSxDQUFDO1lBQ2JDLFVBQVVYLE1BQU1ZLElBQUksQ0FBQ1YsTUFBTTtRQUM3QjtRQUVBLE1BQU1lLFFBQVFwQiwrREFBVUEsQ0FBQ0ksS0FBS1UsUUFBUSxDQUFDLEVBQUU7UUFDekMsTUFBTU8sTUFBTXBCLDZEQUFRQSxDQUFDRyxLQUFLVSxRQUFRLENBQUNWLEtBQUtVLFFBQVEsQ0FBQ0ksTUFBTSxHQUFHLEVBQUU7UUFDNUQsSUFBSUUsTUFBTUUsSUFBSSxJQUFJRCxJQUFJQyxJQUFJLEVBQUVILEtBQUtJLFFBQVEsR0FBRztZQUFDSDtZQUFPQztRQUFHO1FBQ3ZEWixhQUFhUSxJQUFJLENBQUNFO0lBQ3BCO0lBRUEsb0JBQW9CLEdBQ3BCLE1BQU1LLFNBQVM7UUFDYmIsTUFBTTtRQUNOQyxTQUFTO1FBQ1RDLFlBQVksQ0FBQztRQUNiQyxVQUFVWCxNQUFNWSxJQUFJLENBQUNOLGNBQWM7SUFDckM7SUFDQU4sTUFBTWEsS0FBSyxDQUFDWixNQUFNb0I7SUFDbEIsT0FBT3JCLE1BQU1zQixTQUFTLENBQUNyQixNQUFNb0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLWFpLXRlbXBsYXRlLXByby8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2hhbmRsZXJzL3RhYmxlLmpzP2M0NGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5UYWJsZX0gVGFibGVcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtwb2ludFN0YXJ0LCBwb2ludEVuZH0gZnJvbSAndW5pc3QtdXRpbC1wb3NpdGlvbidcblxuLyoqXG4gKiBUdXJuIGFuIG1kYXN0IGB0YWJsZWAgbm9kZSBpbnRvIGhhc3QuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtUYWJsZX0gbm9kZVxuICogICBtZGFzdCBub2RlLlxuICogQHJldHVybnMge0VsZW1lbnR9XG4gKiAgIGhhc3Qgbm9kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRhYmxlKHN0YXRlLCBub2RlKSB7XG4gIGNvbnN0IHJvd3MgPSBzdGF0ZS5hbGwobm9kZSlcbiAgY29uc3QgZmlyc3RSb3cgPSByb3dzLnNoaWZ0KClcbiAgLyoqIEB0eXBlIHtBcnJheTxFbGVtZW50Pn0gKi9cbiAgY29uc3QgdGFibGVDb250ZW50ID0gW11cblxuICBpZiAoZmlyc3RSb3cpIHtcbiAgICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gICAgY29uc3QgaGVhZCA9IHtcbiAgICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICAgIHRhZ05hbWU6ICd0aGVhZCcsXG4gICAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICAgIGNoaWxkcmVuOiBzdGF0ZS53cmFwKFtmaXJzdFJvd10sIHRydWUpXG4gICAgfVxuICAgIHN0YXRlLnBhdGNoKG5vZGUuY2hpbGRyZW5bMF0sIGhlYWQpXG4gICAgdGFibGVDb250ZW50LnB1c2goaGVhZClcbiAgfVxuXG4gIGlmIChyb3dzLmxlbmd0aCA+IDApIHtcbiAgICAvKiogQHR5cGUge0VsZW1lbnR9ICovXG4gICAgY29uc3QgYm9keSA9IHtcbiAgICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICAgIHRhZ05hbWU6ICd0Ym9keScsXG4gICAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICAgIGNoaWxkcmVuOiBzdGF0ZS53cmFwKHJvd3MsIHRydWUpXG4gICAgfVxuXG4gICAgY29uc3Qgc3RhcnQgPSBwb2ludFN0YXJ0KG5vZGUuY2hpbGRyZW5bMV0pXG4gICAgY29uc3QgZW5kID0gcG9pbnRFbmQobm9kZS5jaGlsZHJlbltub2RlLmNoaWxkcmVuLmxlbmd0aCAtIDFdKVxuICAgIGlmIChzdGFydC5saW5lICYmIGVuZC5saW5lKSBib2R5LnBvc2l0aW9uID0ge3N0YXJ0LCBlbmR9XG4gICAgdGFibGVDb250ZW50LnB1c2goYm9keSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICB0YWdOYW1lOiAndGFibGUnLFxuICAgIHByb3BlcnRpZXM6IHt9LFxuICAgIGNoaWxkcmVuOiBzdGF0ZS53cmFwKHRhYmxlQ29udGVudCwgdHJ1ZSlcbiAgfVxuICBzdGF0ZS5wYXRjaChub2RlLCByZXN1bHQpXG4gIHJldHVybiBzdGF0ZS5hcHBseURhdGEobm9kZSwgcmVzdWx0KVxufVxuIl0sIm5hbWVzIjpbInBvaW50U3RhcnQiLCJwb2ludEVuZCIsInRhYmxlIiwic3RhdGUiLCJub2RlIiwicm93cyIsImFsbCIsImZpcnN0Um93Iiwic2hpZnQiLCJ0YWJsZUNvbnRlbnQiLCJoZWFkIiwidHlwZSIsInRhZ05hbWUiLCJwcm9wZXJ0aWVzIiwiY2hpbGRyZW4iLCJ3cmFwIiwicGF0Y2giLCJwdXNoIiwibGVuZ3RoIiwiYm9keSIsInN0YXJ0IiwiZW5kIiwibGluZSIsInBvc2l0aW9uIiwicmVzdWx0IiwiYXBwbHlEYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/table.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/text.js":
/*!**************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/text.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   text: () => (/* binding */ text)\n/* harmony export */ });\n/* harmony import */ var trim_lines__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! trim-lines */ \"(ssr)/./node_modules/trim-lines/index.js\");\n/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */ \n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */ function text(state, node) {\n    /** @type {HastText} */ const result = {\n        type: \"text\",\n        value: (0,trim_lines__WEBPACK_IMPORTED_MODULE_0__.trimLines)(String(node.value))\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFbUM7QUFFcEM7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0MsS0FBS0MsS0FBSyxFQUFFQyxJQUFJO0lBQzlCLHFCQUFxQixHQUNyQixNQUFNQyxTQUFTO1FBQUNDLE1BQU07UUFBUUMsT0FBT04scURBQVNBLENBQUNPLE9BQU9KLEtBQUtHLEtBQUs7SUFBRTtJQUNsRUosTUFBTU0sS0FBSyxDQUFDTCxNQUFNQztJQUNsQixPQUFPRixNQUFNTyxTQUFTLENBQUNOLE1BQU1DO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi1haS10ZW1wbGF0ZS1wcm8vLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90ZXh0LmpzP2M1YjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gSGFzdEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5UZXh0fSBIYXN0VGV4dFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5UZXh0fSBNZGFzdFRleHRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHt0cmltTGluZXN9IGZyb20gJ3RyaW0tbGluZXMnXG5cbi8qKlxuICogVHVybiBhbiBtZGFzdCBgdGV4dGAgbm9kZSBpbnRvIGhhc3QuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtNZGFzdFRleHR9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtIYXN0VGV4dCB8IEhhc3RFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZXh0KHN0YXRlLCBub2RlKSB7XG4gIC8qKiBAdHlwZSB7SGFzdFRleHR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAndGV4dCcsIHZhbHVlOiB0cmltTGluZXMoU3RyaW5nKG5vZGUudmFsdWUpKX1cbiAgc3RhdGUucGF0Y2gobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gc3RhdGUuYXBwbHlEYXRhKG5vZGUsIHJlc3VsdClcbn1cbiJdLCJuYW1lcyI6WyJ0cmltTGluZXMiLCJ0ZXh0Iiwic3RhdGUiLCJub2RlIiwicmVzdWx0IiwidHlwZSIsInZhbHVlIiwiU3RyaW5nIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js":
/*!************************************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   thematicBreak: () => (/* binding */ thematicBreak)\n/* harmony export */ });\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */ /**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */ function thematicBreak(state, node) {\n    /** @type {Element} */ const result = {\n        type: \"element\",\n        tagName: \"hr\",\n        properties: {},\n        children: []\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9oYW5kbGVycy90aGVtYXRpYy1icmVhay5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNBLGNBQWNDLEtBQUssRUFBRUMsSUFBSTtJQUN2QyxvQkFBb0IsR0FDcEIsTUFBTUMsU0FBUztRQUNiQyxNQUFNO1FBQ05DLFNBQVM7UUFDVEMsWUFBWSxDQUFDO1FBQ2JDLFVBQVUsRUFBRTtJQUNkO0lBQ0FOLE1BQU1PLEtBQUssQ0FBQ04sTUFBTUM7SUFDbEIsT0FBT0YsTUFBTVEsU0FBUyxDQUFDUCxNQUFNQztBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tYWktdGVtcGxhdGUtcHJvLy4vbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG8taGFzdC9saWIvaGFuZGxlcnMvdGhlbWF0aWMtYnJlYWsuanM/ZjgzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlRoZW1hdGljQnJlYWt9IFRoZW1hdGljQnJlYWtcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL3N0YXRlLmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuLyoqXG4gKiBUdXJuIGFuIG1kYXN0IGB0aGVtYXRpY0JyZWFrYCBub2RlIGludG8gaGFzdC5cbiAqXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQuXG4gKiBAcGFyYW0ge1RoZW1hdGljQnJlYWt9IG5vZGVcbiAqICAgbWRhc3Qgbm9kZS5cbiAqIEByZXR1cm5zIHtFbGVtZW50fVxuICogICBoYXN0IG5vZGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aGVtYXRpY0JyZWFrKHN0YXRlLCBub2RlKSB7XG4gIC8qKiBAdHlwZSB7RWxlbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICB0YWdOYW1lOiAnaHInLFxuICAgIHByb3BlcnRpZXM6IHt9LFxuICAgIGNoaWxkcmVuOiBbXVxuICB9XG4gIHN0YXRlLnBhdGNoKG5vZGUsIHJlc3VsdClcbiAgcmV0dXJuIHN0YXRlLmFwcGx5RGF0YShub2RlLCByZXN1bHQpXG59XG4iXSwibmFtZXMiOlsidGhlbWF0aWNCcmVhayIsInN0YXRlIiwibm9kZSIsInJlc3VsdCIsInR5cGUiLCJ0YWdOYW1lIiwicHJvcGVydGllcyIsImNoaWxkcmVuIiwicGF0Y2giLCJhcHBseURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toHast: () => (/* binding */ toHast)\n/* harmony export */ });\n/* harmony import */ var _footer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./footer.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/footer.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/state.js\");\n/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */ /**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */ \n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones donâ€™t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isnâ€™t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesnâ€™t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */ // To do: next major: always return a single `root`.\nfunction toHast(tree, options) {\n    const state = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.createState)(tree, options);\n    const node = state.one(tree, null);\n    const foot = (0,_footer_js__WEBPACK_IMPORTED_MODULE_1__.footer)(state);\n    if (foot) {\n        // @ts-expect-error If thereâ€™s a footer, there were definitions, meaning block\n        // content.\n        // So assume `node` is a parent node.\n        node.children.push({\n            type: \"text\",\n            value: \"\\n\"\n        }, foot);\n    }\n    // To do: next major: always return root?\n    return Array.isArray(node) ? {\n        type: \"root\",\n        children: node\n    } : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Ozs7Q0FRQyxHQUVEOzs7Q0FHQyxHQUVpQztBQUNJO0FBRXRDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBNEVDLEdBQ0Qsb0RBQW9EO0FBQzdDLFNBQVNFLE9BQU9DLElBQUksRUFBRUMsT0FBTztJQUNsQyxNQUFNQyxRQUFRSixzREFBV0EsQ0FBQ0UsTUFBTUM7SUFDaEMsTUFBTUUsT0FBT0QsTUFBTUUsR0FBRyxDQUFDSixNQUFNO0lBQzdCLE1BQU1LLE9BQU9SLGtEQUFNQSxDQUFDSztJQUVwQixJQUFJRyxNQUFNO1FBQ1IsOEVBQThFO1FBQzlFLFdBQVc7UUFDWCxxQ0FBcUM7UUFDckNGLEtBQUtHLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDO1lBQUNDLE1BQU07WUFBUUMsT0FBTztRQUFJLEdBQUdKO0lBQ2xEO0lBRUEseUNBQXlDO0lBQ3pDLE9BQU9LLE1BQU1DLE9BQU8sQ0FBQ1IsUUFBUTtRQUFDSyxNQUFNO1FBQVFGLFVBQVVIO0lBQUksSUFBSUE7QUFDaEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLWFpLXRlbXBsYXRlLXByby8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL2luZGV4LmpzPzdiMWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuQ29udGVudH0gSGFzdENvbnRlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Sb290fSBIYXN0Um9vdFxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuQ29udGVudH0gTWRhc3RDb250ZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlJvb3R9IE1kYXN0Um9vdFxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vc3RhdGUuanMnKS5PcHRpb25zfSBPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7SGFzdFJvb3QgfCBIYXN0Q29udGVudH0gSGFzdE5vZGVzXG4gKiBAdHlwZWRlZiB7TWRhc3RSb290IHwgTWRhc3RDb250ZW50fSBNZGFzdE5vZGVzXG4gKi9cblxuaW1wb3J0IHtmb290ZXJ9IGZyb20gJy4vZm9vdGVyLmpzJ1xuaW1wb3J0IHtjcmVhdGVTdGF0ZX0gZnJvbSAnLi9zdGF0ZS5qcydcblxuLyoqXG4gKiBUcmFuc2Zvcm0gbWRhc3QgdG8gaGFzdC5cbiAqXG4gKiAjIyMjIyBOb3Rlc1xuICpcbiAqICMjIyMjIyBIVE1MXG4gKlxuICogUmF3IEhUTUwgaXMgYXZhaWxhYmxlIGluIG1kYXN0IGFzIGBodG1sYCBub2RlcyBhbmQgY2FuIGJlIGVtYmVkZGVkIGluIGhhc3RcbiAqIGFzIHNlbWlzdGFuZGFyZCBgcmF3YCBub2Rlcy5cbiAqIE1vc3QgdXRpbGl0aWVzIGlnbm9yZSBgcmF3YCBub2RlcyBidXQgdHdvIG5vdGFibGUgb25lcyBkb27igJl0OlxuICpcbiAqICogICBgaGFzdC11dGlsLXRvLWh0bWxgIGFsc28gaGFzIGFuIG9wdGlvbiBgYWxsb3dEYW5nZXJvdXNIdG1sYCB3aGljaCB3aWxsXG4gKiAgICAgb3V0cHV0IHRoZSByYXcgSFRNTC5cbiAqICAgICBUaGlzIGlzIHR5cGljYWxseSBkaXNjb3VyYWdlZCBhcyBub3RlZCBieSB0aGUgb3B0aW9uIG5hbWUgYnV0IGlzIHVzZWZ1bFxuICogICAgIGlmIHlvdSBjb21wbGV0ZWx5IHRydXN0IGF1dGhvcnNcbiAqICogICBgaGFzdC11dGlsLXJhd2AgY2FuIGhhbmRsZSB0aGUgcmF3IGVtYmVkZGVkIEhUTUwgc3RyaW5ncyBieSBwYXJzaW5nIHRoZW1cbiAqICAgICBpbnRvIHN0YW5kYXJkIGhhc3Qgbm9kZXMgKGBlbGVtZW50YCwgYHRleHRgLCBldGMpLlxuICogICAgIFRoaXMgaXMgYSBoZWF2eSB0YXNrIGFzIGl0IG5lZWRzIGEgZnVsbCBIVE1MIHBhcnNlciwgYnV0IGl0IGlzIHRoZSBvbmx5XG4gKiAgICAgd2F5IHRvIHN1cHBvcnQgdW50cnVzdGVkIGNvbnRlbnRcbiAqXG4gKiAjIyMjIyMgRm9vdG5vdGVzXG4gKlxuICogTWFueSBvcHRpb25zIHN1cHBvcnRlZCBoZXJlIHJlbGF0ZSB0byBmb290bm90ZXMuXG4gKiBGb290bm90ZXMgYXJlIG5vdCBzcGVjaWZpZWQgYnkgQ29tbW9uTWFyaywgd2hpY2ggd2UgZm9sbG93IGJ5IGRlZmF1bHQuXG4gKiBUaGV5IGFyZSBzdXBwb3J0ZWQgYnkgR2l0SHViLCBzbyBmb290bm90ZXMgY2FuIGJlIGVuYWJsZWQgaW4gbWFya2Rvd24gd2l0aFxuICogYG1kYXN0LXV0aWwtZ2ZtYC5cbiAqXG4gKiBUaGUgb3B0aW9ucyBgZm9vdG5vdGVCYWNrTGFiZWxgIGFuZCBgZm9vdG5vdGVMYWJlbGAgZGVmaW5lIG5hdHVyYWwgbGFuZ3VhZ2VcbiAqIHRoYXQgZXhwbGFpbnMgZm9vdG5vdGVzLCB3aGljaCBpcyBoaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMgYnV0IHNob3duIHRvXG4gKiBhc3Npc3RpdmUgdGVjaG5vbG9neS5cbiAqIFdoZW4geW91ciBwYWdlIGlzIG5vdCBpbiBFbmdsaXNoLCB5b3UgbXVzdCBkZWZpbmUgdHJhbnNsYXRlZCB2YWx1ZXMuXG4gKlxuICogQmFjayByZWZlcmVuY2VzIHVzZSBBUklBIGF0dHJpYnV0ZXMsIGJ1dCB0aGUgc2VjdGlvbiBsYWJlbCBpdHNlbGYgdXNlcyBhXG4gKiBoZWFkaW5nIHRoYXQgaXMgaGlkZGVuIHdpdGggYW4gYHNyLW9ubHlgIGNsYXNzLlxuICogVG8gc2hvdyBpdCB0byBzaWdodGVkIHVzZXJzLCBkZWZpbmUgZGlmZmVyZW50IGF0dHJpYnV0ZXMgaW5cbiAqIGBmb290bm90ZUxhYmVsUHJvcGVydGllc2AuXG4gKlxuICogIyMjIyMjIENsb2JiZXJpbmdcbiAqXG4gKiBGb290bm90ZXMgaW50cm9kdWNlcyBhIHByb2JsZW0sIGFzIGl0IGxpbmtzIGZvb3Rub3RlIGNhbGxzIHRvIGZvb3Rub3RlXG4gKiBkZWZpbml0aW9ucyBvbiB0aGUgcGFnZSB0aHJvdWdoIGBpZGAgYXR0cmlidXRlcyBnZW5lcmF0ZWQgZnJvbSB1c2VyIGNvbnRlbnQsXG4gKiB3aGljaCByZXN1bHRzIGluIERPTSBjbG9iYmVyaW5nLlxuICpcbiAqIERPTSBjbG9iYmVyaW5nIGlzIHRoaXM6XG4gKlxuICogYGBgaHRtbFxuICogPHAgaWQ9eD48L3A+XG4gKiA8c2NyaXB0PmFsZXJ0KHgpIC8vIGB4YCBub3cgcmVmZXJzIHRvIHRoZSBET00gYHAjeGAgZWxlbWVudDwvc2NyaXB0PlxuICogYGBgXG4gKlxuICogRWxlbWVudHMgYnkgdGhlaXIgSUQgYXJlIG1hZGUgYXZhaWxhYmxlIGJ5IGJyb3dzZXJzIG9uIHRoZSBgd2luZG93YCBvYmplY3QsXG4gKiB3aGljaCBpcyBhIHNlY3VyaXR5IHJpc2suXG4gKiBVc2luZyBhIHByZWZpeCBzb2x2ZXMgdGhpcyBwcm9ibGVtLlxuICpcbiAqIE1vcmUgaW5mb3JtYXRpb24gb24gaG93IHRvIGhhbmRsZSBjbG9iYmVyaW5nIGFuZCB0aGUgcHJlZml4IGlzIGV4cGxhaW5lZCBpblxuICogRXhhbXBsZTogaGVhZGluZ3MgKERPTSBjbG9iYmVyaW5nKSBpbiBgcmVoeXBlLXNhbml0aXplYC5cbiAqXG4gKiAjIyMjIyMgVW5rbm93biBub2Rlc1xuICpcbiAqIFVua25vd24gbm9kZXMgYXJlIG5vZGVzIHdpdGggYSB0eXBlIHRoYXQgaXNu4oCZdCBpbiBgaGFuZGxlcnNgIG9yIGBwYXNzVGhyb3VnaGAuXG4gKiBUaGUgZGVmYXVsdCBiZWhhdmlvciBmb3IgdW5rbm93biBub2RlcyBpczpcbiAqXG4gKiAqICAgd2hlbiB0aGUgbm9kZSBoYXMgYSBgdmFsdWVgIChhbmQgZG9lc27igJl0IGhhdmUgYGRhdGEuaE5hbWVgLFxuICogICAgIGBkYXRhLmhQcm9wZXJ0aWVzYCwgb3IgYGRhdGEuaENoaWxkcmVuYCwgc2VlIGxhdGVyKSwgY3JlYXRlIGEgaGFzdCBgdGV4dGBcbiAqICAgICBub2RlXG4gKiAqICAgb3RoZXJ3aXNlLCBjcmVhdGUgYSBgPGRpdj5gIGVsZW1lbnQgKHdoaWNoIGNvdWxkIGJlIGNoYW5nZWQgd2l0aFxuICogICAgIGBkYXRhLmhOYW1lYCksIHdpdGggaXRzIGNoaWxkcmVuIG1hcHBlZCBmcm9tIG1kYXN0IHRvIGhhc3QgYXMgd2VsbFxuICpcbiAqIFRoaXMgYmVoYXZpb3IgY2FuIGJlIGNoYW5nZWQgYnkgcGFzc2luZyBhbiBgdW5rbm93bkhhbmRsZXJgLlxuICpcbiAqIEBwYXJhbSB7TWRhc3ROb2Rlc30gdHJlZVxuICogICBtZGFzdCB0cmVlLlxuICogQHBhcmFtIHtPcHRpb25zIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29wdGlvbnNdXG4gKiAgIENvbmZpZ3VyYXRpb24uXG4gKiBAcmV0dXJucyB7SGFzdE5vZGVzIHwgbnVsbCB8IHVuZGVmaW5lZH1cbiAqICAgaGFzdCB0cmVlLlxuICovXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogYWx3YXlzIHJldHVybiBhIHNpbmdsZSBgcm9vdGAuXG5leHBvcnQgZnVuY3Rpb24gdG9IYXN0KHRyZWUsIG9wdGlvbnMpIHtcbiAgY29uc3Qgc3RhdGUgPSBjcmVhdGVTdGF0ZSh0cmVlLCBvcHRpb25zKVxuICBjb25zdCBub2RlID0gc3RhdGUub25lKHRyZWUsIG51bGwpXG4gIGNvbnN0IGZvb3QgPSBmb290ZXIoc3RhdGUpXG5cbiAgaWYgKGZvb3QpIHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIElmIHRoZXJl4oCZcyBhIGZvb3RlciwgdGhlcmUgd2VyZSBkZWZpbml0aW9ucywgbWVhbmluZyBibG9ja1xuICAgIC8vIGNvbnRlbnQuXG4gICAgLy8gU28gYXNzdW1lIGBub2RlYCBpcyBhIHBhcmVudCBub2RlLlxuICAgIG5vZGUuY2hpbGRyZW4ucHVzaCh7dHlwZTogJ3RleHQnLCB2YWx1ZTogJ1xcbid9LCBmb290KVxuICB9XG5cbiAgLy8gVG8gZG86IG5leHQgbWFqb3I6IGFsd2F5cyByZXR1cm4gcm9vdD9cbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkobm9kZSkgPyB7dHlwZTogJ3Jvb3QnLCBjaGlsZHJlbjogbm9kZX0gOiBub2RlXG59XG4iXSwibmFtZXMiOlsiZm9vdGVyIiwiY3JlYXRlU3RhdGUiLCJ0b0hhc3QiLCJ0cmVlIiwib3B0aW9ucyIsInN0YXRlIiwibm9kZSIsIm9uZSIsImZvb3QiLCJjaGlsZHJlbiIsInB1c2giLCJ0eXBlIiwidmFsdWUiLCJBcnJheSIsImlzQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/revert.js":
/*!*******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/revert.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   revert: () => (/* binding */ revert)\n/* harmony export */ });\n/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */ /**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */ // To do: next major: always return array.\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */ function revert(state, node) {\n    const subtype = node.referenceType;\n    let suffix = \"]\";\n    if (subtype === \"collapsed\") {\n        suffix += \"[]\";\n    } else if (subtype === \"full\") {\n        suffix += \"[\" + (node.label || node.identifier) + \"]\";\n    }\n    if (node.type === \"imageReference\") {\n        return {\n            type: \"text\",\n            value: \"![\" + node.alt + suffix\n        };\n    }\n    const contents = state.all(node);\n    const head = contents[0];\n    if (head && head.type === \"text\") {\n        head.value = \"[\" + head.value;\n    } else {\n        contents.unshift({\n            type: \"text\",\n            value: \"[\"\n        });\n    }\n    const tail = contents[contents.length - 1];\n    if (tail && tail.type === \"text\") {\n        tail.value += suffix;\n    } else {\n        contents.push({\n            type: \"text\",\n            value: suffix\n        });\n    }\n    return contents;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC10by1oYXN0L2xpYi9yZXZlcnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7OztDQVFDLEdBRUQ7OztDQUdDLEdBRUQsMENBQTBDO0FBRTFDOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNBLE9BQU9DLEtBQUssRUFBRUMsSUFBSTtJQUNoQyxNQUFNQyxVQUFVRCxLQUFLRSxhQUFhO0lBQ2xDLElBQUlDLFNBQVM7SUFFYixJQUFJRixZQUFZLGFBQWE7UUFDM0JFLFVBQVU7SUFDWixPQUFPLElBQUlGLFlBQVksUUFBUTtRQUM3QkUsVUFBVSxNQUFPSCxDQUFBQSxLQUFLSSxLQUFLLElBQUlKLEtBQUtLLFVBQVUsSUFBSTtJQUNwRDtJQUVBLElBQUlMLEtBQUtNLElBQUksS0FBSyxrQkFBa0I7UUFDbEMsT0FBTztZQUFDQSxNQUFNO1lBQVFDLE9BQU8sT0FBT1AsS0FBS1EsR0FBRyxHQUFHTDtRQUFNO0lBQ3ZEO0lBRUEsTUFBTU0sV0FBV1YsTUFBTVcsR0FBRyxDQUFDVjtJQUMzQixNQUFNVyxPQUFPRixRQUFRLENBQUMsRUFBRTtJQUV4QixJQUFJRSxRQUFRQSxLQUFLTCxJQUFJLEtBQUssUUFBUTtRQUNoQ0ssS0FBS0osS0FBSyxHQUFHLE1BQU1JLEtBQUtKLEtBQUs7SUFDL0IsT0FBTztRQUNMRSxTQUFTRyxPQUFPLENBQUM7WUFBQ04sTUFBTTtZQUFRQyxPQUFPO1FBQUc7SUFDNUM7SUFFQSxNQUFNTSxPQUFPSixRQUFRLENBQUNBLFNBQVNLLE1BQU0sR0FBRyxFQUFFO0lBRTFDLElBQUlELFFBQVFBLEtBQUtQLElBQUksS0FBSyxRQUFRO1FBQ2hDTyxLQUFLTixLQUFLLElBQUlKO0lBQ2hCLE9BQU87UUFDTE0sU0FBU00sSUFBSSxDQUFDO1lBQUNULE1BQU07WUFBUUMsT0FBT0o7UUFBTTtJQUM1QztJQUVBLE9BQU9NO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLWFpLXRlbXBsYXRlLXByby8uL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvLWhhc3QvbGliL3JldmVydC5qcz9kMjgyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnRDb250ZW50fSBFbGVtZW50Q29udGVudFxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuQ29udGVudH0gQ29udGVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5SZWZlcmVuY2V9IFJlZmVyZW5jZVxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBSb290XG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9zdGF0ZS5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge1Jvb3QgfCBDb250ZW50fSBOb2Rlc1xuICogQHR5cGVkZWYge0V4dHJhY3Q8Tm9kZXMsIFJlZmVyZW5jZT59IFJlZmVyZW5jZXNcbiAqL1xuXG4vLyBUbyBkbzogbmV4dCBtYWpvcjogYWx3YXlzIHJldHVybiBhcnJheS5cblxuLyoqXG4gKiBSZXR1cm4gdGhlIGNvbnRlbnQgb2YgYSByZWZlcmVuY2Ugd2l0aG91dCBkZWZpbml0aW9uIGFzIHBsYWluIHRleHQuXG4gKlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kLlxuICogQHBhcmFtIHtSZWZlcmVuY2VzfSBub2RlXG4gKiAgIFJlZmVyZW5jZSBub2RlIChpbWFnZSwgbGluaykuXG4gKiBAcmV0dXJucyB7RWxlbWVudENvbnRlbnQgfCBBcnJheTxFbGVtZW50Q29udGVudD59XG4gKiAgIGhhc3QgY29udGVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJldmVydChzdGF0ZSwgbm9kZSkge1xuICBjb25zdCBzdWJ0eXBlID0gbm9kZS5yZWZlcmVuY2VUeXBlXG4gIGxldCBzdWZmaXggPSAnXSdcblxuICBpZiAoc3VidHlwZSA9PT0gJ2NvbGxhcHNlZCcpIHtcbiAgICBzdWZmaXggKz0gJ1tdJ1xuICB9IGVsc2UgaWYgKHN1YnR5cGUgPT09ICdmdWxsJykge1xuICAgIHN1ZmZpeCArPSAnWycgKyAobm9kZS5sYWJlbCB8fCBub2RlLmlkZW50aWZpZXIpICsgJ10nXG4gIH1cblxuICBpZiAobm9kZS50eXBlID09PSAnaW1hZ2VSZWZlcmVuY2UnKSB7XG4gICAgcmV0dXJuIHt0eXBlOiAndGV4dCcsIHZhbHVlOiAnIVsnICsgbm9kZS5hbHQgKyBzdWZmaXh9XG4gIH1cblxuICBjb25zdCBjb250ZW50cyA9IHN0YXRlLmFsbChub2RlKVxuICBjb25zdCBoZWFkID0gY29udGVudHNbMF1cblxuICBpZiAoaGVhZCAmJiBoZWFkLnR5cGUgPT09ICd0ZXh0Jykge1xuICAgIGhlYWQudmFsdWUgPSAnWycgKyBoZWFkLnZhbHVlXG4gIH0gZWxzZSB7XG4gICAgY29udGVudHMudW5zaGlmdCh7dHlwZTogJ3RleHQnLCB2YWx1ZTogJ1snfSlcbiAgfVxuXG4gIGNvbnN0IHRhaWwgPSBjb250ZW50c1tjb250ZW50cy5sZW5ndGggLSAxXVxuXG4gIGlmICh0YWlsICYmIHRhaWwudHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgdGFpbC52YWx1ZSArPSBzdWZmaXhcbiAgfSBlbHNlIHtcbiAgICBjb250ZW50cy5wdXNoKHt0eXBlOiAndGV4dCcsIHZhbHVlOiBzdWZmaXh9KVxuICB9XG5cbiAgcmV0dXJuIGNvbnRlbnRzXG59XG4iXSwibmFtZXMiOlsicmV2ZXJ0Iiwic3RhdGUiLCJub2RlIiwic3VidHlwZSIsInJlZmVyZW5jZVR5cGUiLCJzdWZmaXgiLCJsYWJlbCIsImlkZW50aWZpZXIiLCJ0eXBlIiwidmFsdWUiLCJhbHQiLCJjb250ZW50cyIsImFsbCIsImhlYWQiLCJ1bnNoaWZ0IiwidGFpbCIsImxlbmd0aCIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/revert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdast-util-to-hast/lib/state.js":
/*!******************************************************!*\
  !*** ./node_modules/mdast-util-to-hast/lib/state.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   createState: () => (/* binding */ createState),\n/* harmony export */   one: () => (/* binding */ one),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit */ \"(ssr)/./node_modules/unist-util-visit/lib/index.js\");\n/* harmony import */ var unist_util_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! unist-util-position */ \"(ssr)/./node_modules/unist-util-position/lib/index.js\");\n/* harmony import */ var unist_util_generated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! unist-util-generated */ \"(ssr)/./node_modules/unist-util-generated/lib/index.js\");\n/* harmony import */ var mdast_util_definitions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mdast-util-definitions */ \"(ssr)/./node_modules/mdast-util-definitions/lib/index.js\");\n/* harmony import */ var _handlers_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers/index.js */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/index.js\");\n/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */ /**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a nodeâ€™s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */ \n\n\n\n\nconst own = {}.hasOwnProperty;\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */ function createState(tree, options) {\n    const settings = options || {};\n    const dangerous = settings.allowDangerousHtml || false;\n    /** @type {Record<string, MdastFootnoteDefinition>} */ const footnoteById = {};\n    // To do: next major: add `options` to state, remove:\n    // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n    // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n    // `unknownHandler`.\n    // To do: next major: move to `state.options.allowDangerousHtml`.\n    state.dangerous = dangerous;\n    // To do: next major: move to `state.options`.\n    state.clobberPrefix = settings.clobberPrefix === undefined || settings.clobberPrefix === null ? \"user-content-\" : settings.clobberPrefix;\n    // To do: next major: move to `state.options`.\n    state.footnoteLabel = settings.footnoteLabel || \"Footnotes\";\n    // To do: next major: move to `state.options`.\n    state.footnoteLabelTagName = settings.footnoteLabelTagName || \"h2\";\n    // To do: next major: move to `state.options`.\n    state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n        className: [\n            \"sr-only\"\n        ]\n    };\n    // To do: next major: move to `state.options`.\n    state.footnoteBackLabel = settings.footnoteBackLabel || \"Back to content\";\n    // To do: next major: move to `state.options`.\n    state.unknownHandler = settings.unknownHandler;\n    // To do: next major: move to `state.options`.\n    state.passThrough = settings.passThrough;\n    state.handlers = {\n        ..._handlers_index_js__WEBPACK_IMPORTED_MODULE_0__.handlers,\n        ...settings.handlers\n    };\n    // To do: next major: replace utility with `definitionById` object, so we\n    // only walk once (as we need footnotes too).\n    state.definition = (0,mdast_util_definitions__WEBPACK_IMPORTED_MODULE_1__.definitions)(tree);\n    state.footnoteById = footnoteById;\n    /** @type {Array<string>} */ state.footnoteOrder = [];\n    /** @type {Record<string, number>} */ state.footnoteCounts = {};\n    state.patch = patch;\n    state.applyData = applyData;\n    state.one = oneBound;\n    state.all = allBound;\n    state.wrap = wrap;\n    // To do: next major: remove `augment`.\n    state.augment = augment;\n    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_2__.visit)(tree, \"footnoteDefinition\", (definition)=>{\n        const id = String(definition.identifier).toUpperCase();\n        // Mimick CM behavior of link definitions.\n        // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n        if (!own.call(footnoteById, id)) {\n            footnoteById[id] = definition;\n        }\n    });\n    // @ts-expect-error Hush, itâ€™s fine!\n    return state;\n    /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */ /* c8 ignore start */ // To do: next major: remove.\n    function augment(left, right) {\n        // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n        if (left && \"data\" in left && left.data) {\n            /** @type {MdastData} */ const data = left.data;\n            if (data.hName) {\n                if (right.type !== \"element\") {\n                    right = {\n                        type: \"element\",\n                        tagName: \"\",\n                        properties: {},\n                        children: []\n                    };\n                }\n                right.tagName = data.hName;\n            }\n            if (right.type === \"element\" && data.hProperties) {\n                right.properties = {\n                    ...right.properties,\n                    ...data.hProperties\n                };\n            }\n            if (\"children\" in right && right.children && data.hChildren) {\n                right.children = data.hChildren;\n            }\n        }\n        if (left) {\n            const ctx = \"type\" in left ? left : {\n                position: left\n            };\n            if (!(0,unist_util_generated__WEBPACK_IMPORTED_MODULE_3__.generated)(ctx)) {\n                // @ts-expect-error: fine.\n                right.position = {\n                    start: (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.pointStart)(ctx),\n                    end: (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.pointEnd)(ctx)\n                };\n            }\n        }\n        return right;\n    }\n    /* c8 ignore stop */ /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */ /* c8 ignore start */ // To do: next major: remove.\n    function state(node, tagName, props, children) {\n        if (Array.isArray(props)) {\n            children = props;\n            props = {};\n        }\n        // @ts-expect-error augmenting an element yields an element.\n        return augment(node, {\n            type: \"element\",\n            tagName,\n            properties: props || {},\n            children: children || []\n        });\n    }\n    /* c8 ignore stop */ /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */ function oneBound(node, parent) {\n        // @ts-expect-error: thatâ€™s a state :)\n        return one(state, node, parent);\n    }\n    /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */ function allBound(parent) {\n        // @ts-expect-error: thatâ€™s a state :)\n        return all(state, parent);\n    }\n}\n/**\n * Copy a nodeâ€™s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */ function patch(from, to) {\n    if (from.position) to.position = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.position)(from);\n}\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */ function applyData(from, to) {\n    /** @type {Type | HastElement} */ let result = to;\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (from && from.data) {\n        const hName = from.data.hName;\n        const hChildren = from.data.hChildren;\n        const hProperties = from.data.hProperties;\n        if (typeof hName === \"string\") {\n            // Transforming the node resulted in an element with a different name\n            // than wanted:\n            if (result.type === \"element\") {\n                result.tagName = hName;\n            } else {\n                result = {\n                    type: \"element\",\n                    tagName: hName,\n                    properties: {},\n                    children: []\n                };\n            // To do: next major: take the children from the `root`, or inject the\n            // raw/text/comment or so into the element?\n            // if ('children' in node) {\n            //   // @ts-expect-error: assume `children` are allowed in elements.\n            //   result.children = node.children\n            // } else {\n            //   // @ts-expect-error: assume `node` is allowed in elements.\n            //   result.children.push(node)\n            // }\n            }\n        }\n        if (result.type === \"element\" && hProperties) {\n            result.properties = {\n                ...result.properties,\n                ...hProperties\n            };\n        }\n        if (\"children\" in result && result.children && hChildren !== null && hChildren !== undefined) {\n            // @ts-expect-error: assume valid children are defined.\n            result.children = hChildren;\n        }\n    }\n    return result;\n}\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */ // To do: next major: do not expose, keep bound.\nfunction one(state, node, parent) {\n    const type = node && node.type;\n    // Fail on non-nodes.\n    if (!type) {\n        throw new Error(\"Expected node, got `\" + node + \"`\");\n    }\n    if (own.call(state.handlers, type)) {\n        return state.handlers[type](state, node, parent);\n    }\n    if (state.passThrough && state.passThrough.includes(type)) {\n        // To do: next major: deep clone.\n        // @ts-expect-error: types of passed through nodes are expected to be added manually.\n        return \"children\" in node ? {\n            ...node,\n            children: all(state, node)\n        } : node;\n    }\n    if (state.unknownHandler) {\n        return state.unknownHandler(state, node, parent);\n    }\n    return defaultUnknownHandler(state, node);\n}\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */ // To do: next major: do not expose, keep bound.\nfunction all(state, parent) {\n    /** @type {Array<HastElementContent>} */ const values = [];\n    if (\"children\" in parent) {\n        const nodes = parent.children;\n        let index = -1;\n        while(++index < nodes.length){\n            const result = one(state, nodes[index], parent);\n            // To do: see if we van clean this? Can we merge texts?\n            if (result) {\n                if (index && nodes[index - 1].type === \"break\") {\n                    if (!Array.isArray(result) && result.type === \"text\") {\n                        result.value = result.value.replace(/^\\s+/, \"\");\n                    }\n                    if (!Array.isArray(result) && result.type === \"element\") {\n                        const head = result.children[0];\n                        if (head && head.type === \"text\") {\n                            head.value = head.value.replace(/^\\s+/, \"\");\n                        }\n                    }\n                }\n                if (Array.isArray(result)) {\n                    values.push(...result);\n                } else {\n                    values.push(result);\n                }\n            }\n        }\n    }\n    return values;\n}\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */ function defaultUnknownHandler(state, node) {\n    const data = node.data || {};\n    /** @type {HastText | HastElement} */ const result = \"value\" in node && !(own.call(data, \"hProperties\") || own.call(data, \"hChildren\")) ? {\n        type: \"text\",\n        value: node.value\n    } : {\n        type: \"element\",\n        tagName: \"div\",\n        properties: {},\n        children: all(state, node)\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n}\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */ function wrap(nodes, loose) {\n    /** @type {Array<Type | HastText>} */ const result = [];\n    let index = -1;\n    if (loose) {\n        result.push({\n            type: \"text\",\n            value: \"\\n\"\n        });\n    }\n    while(++index < nodes.length){\n        if (index) result.push({\n            type: \"text\",\n            value: \"\\n\"\n        });\n        result.push(nodes[index]);\n    }\n    if (loose && nodes.length > 0) {\n        result.push({\n            type: \"text\",\n            value: \"\\n\"\n        });\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdast-util-to-hast/lib/state.js\n");

/***/ })

};
;